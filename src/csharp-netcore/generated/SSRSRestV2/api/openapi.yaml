openapi: 3.0.1
info:
  description: "The SQL Server 2017 Reporting Services REST API provides programmatic\
    \ access to the report server catalog. \nFor example, basic CRUD operations can\
    \ be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions,\
    \ etc.\n   \nThe REST API can also be used to provide more advanced functionality,\
    \ such as:\n* Navigate the folder hierarchy\n* Discover the contents of a folder\n\
    * Download a report definition\n* Modify default report parameters\n* Change or\
    \ execute a refresh plan\n* A whole lot more\n\nThe REST API is a RESTful successor\
    \ to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).\n\
    \nHappy coding!\n\n__API samples:__ https://github.com/Microsoft/Reporting-Services\n\
    \n__Developer documentation:__ https://docs.microsoft.com/sql/reporting-services/reporting-services-developer-documentation\n\
    \n__Team Blog:__ https://blogs.msdn.microsoft.com/sqlrsteamblog\n\n__Support forums:__\
    \ https://social.msdn.microsoft.com/Forums/en-US/home?forum=sqlreportingservices\n"
  title: SQL Server 2017 Reporting Services REST API
  version: "2.0"
servers:
- url: http://localhost/reports/api/v2.0
- url: https://localhost/reports/api/v2.0
tags:
- name: CacheRefreshPlans
- name: CatalogItems
- name: DataSets
- name: DataSources
- name: Extensions
- name: FavoriteItems
- name: Folders
- name: Kpis
- name: LinkedReports
- name: Me
- name: MobileReports
- name: Reports
- name: Resources
- name: Session
- name: Subscriptions
- name: System
paths:
  /CacheRefreshPlans:
    post:
      operationId: AddCacheRefreshPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheRefreshPlan'
        description: The definition of the new CacheRefreshPlan item.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRefreshPlan'
          description: The definition of the CacheRefreshPlan item that was just created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new CacheRefreshPlan item.
      tags:
      - CacheRefreshPlans
      x-codegen-request-body-name: CacheRefreshPlan
  /CacheRefreshPlans({Id}):
    delete:
      operationId: DeleteCacheRefreshPlan
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified CacheRefreshPlan.
      tags:
      - CacheRefreshPlans
    get:
      operationId: GetCacheRefreshPlan
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRefreshPlan'
          description: The CacheRefreshPlan item specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a CacheRefreshPlan item specified by the Id.
      tags:
      - CacheRefreshPlans
    put:
      operationId: SetCacheRefreshPlan
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheRefreshPlan'
        description: Definition of the CacheRefreshPlan item that updates the current
          item on the server.
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRefreshPlan'
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces the specified CacheRefreshPlan item using the provided definition.
      tags:
      - CacheRefreshPlans
      x-codegen-request-body-name: CacheRefreshPlan
  /CacheRefreshPlans({Id})/Model.Execute:
    post:
      operationId: ExecuteCacheRefreshPlan
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: The return result is empty.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Executes given CacheRefreshPlan immediately.
      tags:
      - CacheRefreshPlans
  /CatalogItems:
    get:
      operationId: GetCatalogItems
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCatalogItems'
          description: OData array of CatalogItems.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of CatalogItems.
      tags:
      - CatalogItems
    post:
      operationId: AddCatalogItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
        description: The definition of the new CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
          description: The definition of the CatalogItem that was just created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new CatalogItem.
      tags:
      - CatalogItems
      x-codegen-request-body-name: CatalogItem
  /CatalogItems/Model.DeleteItems:
    post:
      operationId: DeleteCatalogItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteItemsRequest'
        description: List of catalog item paths to delete.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationsResult'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the given list of items
      tags:
      - CatalogItems
      x-codegen-request-body-name: DeleteItemsRequest
  /CatalogItems/Model.MoveItems:
    post:
      operationId: MoveCatalogItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveItemsRequest'
        description: List of catalog item paths and target folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationsResult'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Moves given list of items to target folder.
      tags:
      - CatalogItems
      x-codegen-request-body-name: MoveItemsRequest
  /CatalogItems({Id}):
    delete:
      operationId: DeleteCatalogItem
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified CatalogItem.
      tags:
      - CatalogItems
    get:
      operationId: GetCatalogItem
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogItem'
          description: The CatalogItem specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a CatalogItem specified by the Id.
      tags:
      - CatalogItems
    patch:
      operationId: UpdateCatalogItem
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogItem'
        description: Definition of the CatalogItem that updates the current item on
          the server. The type for the defintion can be any of the supported CatalogItemTypes.
          It is only necessary to include properties to be updated. All other property
          values will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified CatalogItem using the provided definition.
      tags:
      - CatalogItems
      x-codegen-request-body-name: CatalogItem
  /CatalogItems({Id})/Content/$value:
    get:
      operationId: GetCatalogItemContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The content of the CatalogItem specified by the Id.
        "204":
          content: {}
          description: No content.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the specified CatalogItem specified by the Id.
      tags:
      - CatalogItems
  /CatalogItems({Id})/Policies:
    get:
      operationId: GetCatalogItemPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: An array of ItemPolicies that are associated with the specified
            CatalogItem.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the specified CatalogItem.
      tags:
      - CatalogItems
    put:
      operationId: SetCatalogItemPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the specified CatalogItem.
      tags:
      - CatalogItems
      x-codegen-request-body-name: CatalogItem
  /CatalogItems({Id})/Properties:
    get:
      operationId: GetCatalogItemProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Comma-separated list of Property names to be returned.
        explode: false
        in: query
        name: Properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the specified Properties for the CatalogItem (takes list of Property
        names to retrieve the values)
      tags:
      - CatalogItems
    patch:
      operationId: UpdateCatalogItemProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated. It is only necessary to
          include properties to be updated. All other property values will be left
          unchanged.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates a CatalogItem's Properties with the list of given properties.
      tags:
      - CatalogItems
      x-codegen-request-body-name: Properties
  /CatalogItems({Id})/Roles:
    get:
      operationId: GetCatalogItemRoles
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties_1'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the list of available Roles for the CatalogItem
      tags:
      - CatalogItems
  /DataSets:
    get:
      operationId: GetDataSets
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDataSets'
          description: OData array of DataSet CatalogItems.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of DataSet CatalogItems.
      tags:
      - DataSets
    post:
      operationId: AddDataSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSet'
        description: The definition of the new DataSet CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: The definition of the DataSet item that was just created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new DataSet CatalogItem.
      tags:
      - DataSets
      x-codegen-request-body-name: DataSet
  /DataSets({Id}):
    delete:
      operationId: DeleteDataSet
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified DataSet.
      tags:
      - DataSets
    get:
      operationId: GetDataSet
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: The DataSet CatalogItem specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a DataSet CatalogItem specified by the Id.
      tags:
      - DataSets
    patch:
      operationId: UpdateDataSet
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSet'
        description: Definition of the DataSet item that updates the current item
          on the server. It is only necessary to include properties to be updated.
          All other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified DataSet CatalogItem using the provided definition.
      tags:
      - DataSets
      x-codegen-request-body-name: DataSet
  /DataSets({Id})/AllowedActions:
    get:
      operationId: GetDataSetAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: OData array of AllowedActions.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; user permissions
        and product edition capabilities are considered when querying.
      tags:
      - DataSets
  /DataSets({Id})/CacheOptions:
    get:
      operationId: GetDataSetCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheOptions'
          description: Returns the CacheOption's content for a given DataSet.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the CacheOption's content for a given DataSet.
      tags:
      - DataSets
    put:
      operationId: SetDataSetCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheOptions'
        description: Updated definition for the CacheOption's content associated with
          the given DataSet.
        required: true
      responses:
        "204":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces the CacheOption's content for a given DataSet using the provided
        definition.
      tags:
      - DataSets
      x-codegen-request-body-name: CacheOptions
  /DataSets({Id})/CacheRefreshPlans:
    get:
      operationId: GetDataSetCacheRefreshPlans
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCacheRefreshPlans'
          description: Returns the CacheRefreshPlans for a given DataSet.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the CacheRefreshPlans for a given DataSet.
      tags:
      - DataSets
  /DataSets({Id})/Content/$value:
    get:
      operationId: GetDataSetContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The content of the DataSet CatalogItem specified by the Id.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the specified DataSet CatalogItem specified by
        the Id.
      tags:
      - DataSets
  /DataSets({Id})/DataSources:
    get:
      operationId: GetDataSetDataSources
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSource'
                type: array
          description: An array of DataSources that are associated with the specified
            DataSet CatalogItem.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the DataSources associated with the specified DataSet.
      tags:
      - DataSets
    put:
      operationId: SetDataSetDataSources
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: Updated definition for the DataSource associated with the specified
          DataSet CatalogItem.
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSource definition associated with the specified DataSet.
      tags:
      - DataSets
      x-codegen-request-body-name: DataSource
  /DataSets({Id})/DataSources({DataSourceId}):
    get:
      operationId: GetDataSetDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the DataSource associated with the DataSet.
        in: path
        name: DataSourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
          description: The DataSource specified by the DataSourceId that is associated
            with the DataSet CatalogItem.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the DataSource specified by the DataSourceId that is associated
        with the DataSet.
      tags:
      - DataSets
    put:
      operationId: SetDataSetDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the DataSource associated with the DataSet.
        in: path
        name: DataSourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: Updated definition for the DataSource associated with the DataSet.
        required: true
      responses:
        "204":
          content: {}
          description: No Content.
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSource specified by the DataSourceId that is associated
        with the DataSet.
      tags:
      - DataSets
      x-codegen-request-body-name: DataSource
  /DataSets({Id})/DependentItems:
    get:
      operationId: GetDataSetDependentItems
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDependentItems'
          description: An array of CatalogItems dependent upon the specified DataSet.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Returns a list of CatalogItems that reference the specified DataSet.
      tags:
      - DataSets
  /DataSets({Id})/Model.GetAggregatedValue:
    post:
      operationId: GetDataSetAggregatedValue
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The name of the DataSet column to aggregate the value for.
        in: query
        name: ColumnName
        required: true
        schema:
          type: string
      - description: The type of aggregation to use on the specified column. Values
          come from the KpiSharedDataItemAggregation enum.
        in: query
        name: Aggregation
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetAggregateValueParameters'
        description: An array of DataSet parameters to use when executing the query.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: double
                  type: number
                type: array
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not Found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the value for the specified DataSet column using the given aggregation
        type.
      tags:
      - DataSets
      x-codegen-request-body-name: Parameters
  /DataSets({Id})/Model.GetData:
    post:
      operationId: GetDataSetData
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Specifies the maximum number of rows to return from the query.
        in: query
        name: MaxRows
        schema:
          format: Int32
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetDataParameters'
        description: An array of DataSet parameters to use when executing the query.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetData'
          description: Ok
        "404":
          content: {}
          description: Not Found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the query results for the specified DataSet.
      tags:
      - DataSets
      x-codegen-request-body-name: Parameters
  /DataSets({Id})/Model.GetSchema:
    get:
      operationId: GetDataSetSchema
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetSchema'
          description: The schema for the DataSet.
        "404":
          content: {}
          description: Not Found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the schema for the specified DataSet.
      tags:
      - DataSets
  /DataSets({Id})/ParameterDefinitions:
    get:
      operationId: GetDataSetParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataReportParameterDefinitions'
          description: An array of ParameterDefinitions that are associated with the
            specified DataSet CatalogItem.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the ParameterDefinitions associated with the specified DataSet.
      tags:
      - DataSets
    patch:
      operationId: UpdateDataSetParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ReportParameterDefinitionPatch'
              type: array
        description: "Updated definitions for the ParameterDefinitions associated\
          \ with the DataSet, represented as ParameterDefinitionsPatch objects. It\
          \ is only necessary to include properties to be updated. All other property\
          \ valueswill be left unchanged."
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the ParameterDefinitions associated with the DataSet specified.
      tags:
      - DataSets
      x-codegen-request-body-name: ParameterDefinitions
  /DataSets({Id})/Policies:
    get:
      operationId: GetDataSetPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: An array of ItemPolicies that are associated with the specified
            DataSet CatalogItem.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the specified DataSet CatalogItem.
      tags:
      - DataSets
    put:
      operationId: SetDataSetPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the specified DataSet item.
      tags:
      - DataSets
      x-codegen-request-body-name: ItemPolicy
  /DataSets({Id})/Properties:
    get:
      operationId: GetDatasetProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets DataSet Properties (takes list of property names to retrieve the
        values)
      tags:
      - DataSets
    put:
      operationId: UpdateDatasetProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSet Properties included in the given list.
      tags:
      - DataSets
      x-codegen-request-body-name: Properties
  /DataSources:
    get:
      operationId: GetDataSources
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDataSources'
          description: OData array of DataSource CatalogItems
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of DataSource CatalogItems.
      tags:
      - DataSources
    post:
      operationId: AddDataSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: The definition of the new DataSource CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
          description: The definition of the DataSource item that was just created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new DataSource CatalogItem.
      tags:
      - DataSources
      x-codegen-request-body-name: DataSource
  /DataSources/Model.CheckConnection:
    post:
      operationId: CheckNewDataSourceConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: "The definition of data source.  Must contain connectionstring,\
          \ data provider, and credentials to connect to the data source."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceCheckResult'
          description: A DataSourceCheckResult that contains the results of the check
            connection operation.
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Tests the connection for a data source. This method supports the direct
        testing of the unsaved data source.
      tags:
      - DataSources
      x-codegen-request-body-name: dataSource
  /DataSources/Model.GetQueryFields:
    post:
      operationId: GetDataSourceQueryFields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFieldsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataQueryFields'
          description: Ok.
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Retrieves a dataset that contains the fields retrieved by the delivery
        query for a data-driven subscription.
      tags:
      - DataSources
      x-codegen-request-body-name: QueryFieldsRequest
  /DataSources({Id}):
    delete:
      operationId: DeleteDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified DataSource.
      tags:
      - DataSources
    get:
      operationId: GetDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
          description: The DataSource CatalogItem specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a DataSource CatalogItem specified by the Id.
      tags:
      - DataSources
    patch:
      operationId: UpdateDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: Definition of the DataSource item that updates the current item
          on the server. It is only necessary to include properties to be updated.
          All other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSource CatalogItem specified by the Id using the provided
        definition.
      tags:
      - DataSources
      x-codegen-request-body-name: DataSource
  /DataSources({Id})/AllowedActions:
    get:
      operationId: GetDataSourceAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; user permissions
        and product edition capabilities are considered when querying.
      tags:
      - DataSources
  /DataSources({Id})/Content/$value:
    get:
      operationId: GetDataSourceContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The content of the DataSource CatalogItem specified by the
            Id.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the DataSource CatalogItem specified by the Id.
      tags:
      - DataSources
  /DataSources({Id})/DependentItems:
    get:
      operationId: GetDataSourceDependentItems
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDependentItems'
          description: Ok.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Returns a list of CatalogItems that reference the DataSource specified
        by the Id.
      tags:
      - DataSources
  /DataSources({Id})/Model.CheckConnection:
    post:
      operationId: CheckExistingDataSourceConnection
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceCheckResult'
          description: A DataSourceCheckResult that contains the results of the check
            connection operation.
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Tests the connection for a data source. This method supports the testing
        of published data sources that are used by reports and shared data sources
      tags:
      - DataSources
  /DataSources({Id})/Policies:
    get:
      operationId: GetDataSourcePolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the DataSource specified by the Id.
      tags:
      - DataSources
    put:
      operationId: SetDataSourcePolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the DataSource specified by the
        Id.
      tags:
      - DataSources
      x-codegen-request-body-name: ItemPolicy
  /DataSources({Id})/Properties:
    get:
      operationId: GetDatasourceProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets DataSource Properties (takes list of property names to retrieve
        the values)
      tags:
      - DataSources
    put:
      operationId: UpdateDatasourceProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSource Properties included in the given list.
      tags:
      - DataSources
      x-codegen-request-body-name: Properties
  /Extensions:
    get:
      operationId: GetExtensions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Extension'
                type: array
          description: A array of Extension objects.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Retreives all Extension items.
      tags:
      - Extensions
  /Extensions/Model.ValidateExtensionSettings:
    post:
      operationId: ValidateExtensionParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionSettings'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExtensionParameter'
                type: array
          description: A array of ExtensionParameter objects.
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Validates extension parameters and returns collection of ExtensionParameter.
      tags:
      - Extensions
      x-codegen-request-body-name: ExtensionSettings
  /Extensions({Id})/Parameters:
    get:
      operationId: GetExtensionParameters
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExtensionParameter'
                type: array
          description: A array of ExtensionParameter objects.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Retrieves the ExtensionParameter list for given extension.
      tags:
      - Extensions
  /FavoriteItems:
    get:
      operationId: GetFavoriteItems
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)"
        in: query
        name: $expand
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FavoriteItem'
                type: array
          description: A array of items that have been designated as favorites.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Retrieves a collection of items of type CatalogItem which have been
        designated as favorites. Use the OData $expand option to also get the referenced
        items.
      tags:
      - FavoriteItems
    post:
      operationId: SetFavoriteItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteItem'
        description: "The reference to the CatalogItem to be designated as a favorite.\
          \ It only needs the Id property. Thus, it is not necessary to provide Item\
          \ property in the payload."
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteItem'
          description: Created entity
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Designate a CatalogItem as a favorite.
      tags:
      - FavoriteItems
      x-codegen-request-body-name: FavoriteItem
  /FavoriteItems({Id}):
    delete:
      operationId: RemoveFavoriteItem
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Removes a CatalogItem from the list of favorite items.
      tags:
      - FavoriteItems
  /Folders:
    get:
      operationId: GetFolders
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataFolders'
          description: OData array of Folder CatalogItems.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of Folder CatalogItems.
      tags:
      - Folders
    post:
      operationId: AddFolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        description: The definition of the new Folder CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The definition of the Folder item that was just created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Folder CatalogItem.
      tags:
      - Folders
      x-codegen-request-body-name: body
  /Folders({Id}):
    delete:
      operationId: DeleteFolder
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Folder.
      tags:
      - Folders
    get:
      operationId: GetFolder
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The Folder CatalogItem specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a Folder CatalogItem specified by the Id.
      tags:
      - Folders
    patch:
      operationId: UpdateFolder
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        description: Definition of the Folder item that updates the current item on
          the server. It is only necessary to include properties to be updated. All
          other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified Folder CatalogItem using the provided definition.
      tags:
      - Folders
      x-codegen-request-body-name: Folder
  /Folders({Id})/AllowedActions:
    get:
      operationId: GetFolderAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; user permissions
        and product edition capabilities are considered when querying.
      tags:
      - Folders
  /Folders({Id})/CatalogItems:
    get:
      operationId: GetFolderCatalogItems
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCatalogItems'
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of child CatalogItems in the specified folder.
      tags:
      - Folders
  /Folders({Id})/Model.SearchItems(searchText='{searchText}'):
    post:
      operationId: SearchCatalogItemsInFolder
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Name of item to search in the folder.
        in: path
        name: searchText
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCatalogItems_1'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Searches items in a given folder.
      tags:
      - Folders
  /Folders({Id})/Policies:
    get:
      operationId: GetFolderPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: An array of ItemPolicies that are associated with the Folder
            CatalogItem specified by the Id.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets policies associated with the Folder CatalogItem specified by the
        Id.
      tags:
      - Folders
    put:
      operationId: SetFolderPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the Folder item specified by
        the Id.
      tags:
      - Folders
      x-codegen-request-body-name: ItemPolicy
  /Folders({Id})/Properties:
    get:
      operationId: GetFolderProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets Folder Properties (takes list of Property names to retrieve the
        values)
      tags:
      - Folders
    put:
      operationId: UpdateFolderProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Folder Properties included in the given list.
      tags:
      - Folders
      x-codegen-request-body-name: Properties
  /Kpis:
    get:
      operationId: GetKpis
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataKpis'
          description: OData array of Kpi CatalogItems.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of Kpi CatalogItems.
      tags:
      - Kpis
    post:
      operationId: AddKpi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kpi'
        description: The definition of the new KPI CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kpi'
          description: Created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Kpi CatalogItem.
      tags:
      - Kpis
      x-codegen-request-body-name: Kpi
  /Kpis({Id}):
    delete:
      operationId: DeleteKpi
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Kpi.
      tags:
      - Kpis
    get:
      operationId: GetKpi
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kpi'
          description: Ok.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a Kpi CatalogItem specified by the Id.
      tags:
      - Kpis
    patch:
      operationId: UpdateKpi
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kpi'
        description: Definition of the KPI item that updates the current item on the
          server. It is only necessary to include properties to be updated. All other
          property values will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified Kpi CatalogItem using the provided definition.
      tags:
      - Kpis
      x-codegen-request-body-name: Kpi
  /Kpis({Id})/AllowedActions:
    get:
      operationId: GetKpiAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: "Gets a list of actions allowed in the current session, user permissions\
        \ and product edition capabilities are considered when querying."
      tags:
      - Kpis
  /Kpis({Id})/Policies:
    get:
      operationId: GetKpiPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: An array of ItemPolicies that are associated with the Kpi CatalogItem
            specified by the Id.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the Kpi CatalogItem specified by
        the Id.
      tags:
      - Kpis
    put:
      operationId: SetKpiPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the Kpi specified by the Id.
      tags:
      - Kpis
      x-codegen-request-body-name: ItemPolicies
  /Kpis({Id})/Properties:
    get:
      operationId: GetKpiProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: Properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets Kpi Properties (takes list of Property names to retrieve the values)
      tags:
      - Kpis
    put:
      operationId: UpdateKpiProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Kpi Properties included in the given list.
      tags:
      - Kpis
      x-codegen-request-body-name: Properties
  /LinkedReports:
    get:
      operationId: GetLinkedReports
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataLinkedReports'
          description: Ok.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of LinkedReport CatalogItems.
      tags:
      - LinkedReports
    post:
      operationId: AddLinkedReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedReport'
        description: The definition of the new LinkedReport CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedReport'
          description: Created.
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new LinkedReport CatalogItem.
      tags:
      - LinkedReports
      x-codegen-request-body-name: LinkedReport
  /LinkedReports({Id}):
    delete:
      operationId: DeleteLinkedReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified LinkedReport.
      tags:
      - LinkedReports
    get:
      operationId: GetLinkedReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedReport'
          description: The LinkedReport CatalogItem specified by the Id.
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a LinkedReport CatalogItem specified by the Id.
      tags:
      - LinkedReports
    patch:
      operationId: UpdateLinkedReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedReport'
        description: Definition of the LinkedReport item that updates the current
          item on the server. It is only necessary to include properties to be updated.
          All other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified LinkedReport CatalogItem using the provided definition.
      tags:
      - LinkedReports
      x-codegen-request-body-name: LinkedReport
  /LinkedReports({Id})/AllowedActions:
    get:
      operationId: GetLinkedReportAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; user permissions
        and product edition capabilities are considered when querying.
      tags:
      - LinkedReports
  /LinkedReports({Id})/CacheOptions:
    get:
      operationId: GetLinkedReportCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheOptions'
          description: Returns the content of CacheOptions for the LinkedReport specified
            by the Id.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of CacheOptions for the LinkedReport specified by
        the Id.
      tags:
      - LinkedReports
    put:
      operationId: SetLinkedReportCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheOptions'
        description: Updated definition for the CacheOption's content associated with
          the LinkedReport specified by the Id.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces the CacheOption's content for a given LinkedReport using the
        provided definition.
      tags:
      - LinkedReports
      x-codegen-request-body-name: CacheOptions
  /LinkedReports({Id})/CacheRefreshPlans:
    get:
      operationId: GetLinkedReportCacheRefreshPlans
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCacheRefreshPlans'
          description: Returns the CacheRefreshPlans for a LinkedReport specified
            by the Id.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the CacheRefreshPlans for a LinkedReport specified by the Id.
      tags:
      - LinkedReports
  /LinkedReports({Id})/Comments:
    get:
      operationId: GetLinkedReportComments
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataComments'
          description: A collection of Comments associated to the LinkedReport
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the Comments for a LinkedReport specified by the Id.
      tags:
      - LinkedReports
    post:
      operationId: AddLinkedReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be created
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Comment associated to the specified LinkedReport.
      tags:
      - LinkedReports
      x-codegen-request-body-name: Comment
  /LinkedReports({Id})/Comments({CommentId}):
    delete:
      operationId: DeleteLinkedReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Comment associated to the LinkedReport.
      tags:
      - LinkedReports
    put:
      operationId: UpdateLinkedReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be updated
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Comment specified by CommentId in the associated LinkedReport.
      tags:
      - LinkedReports
      x-codegen-request-body-name: Comment
  /LinkedReports({Id})/HistorySnapshots:
    get:
      operationId: GetLinkedReportHistorySnapshots
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistorySnapshot'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Get a list of HistorySnapshots of the LinkedReport specified by Id.
      tags:
      - LinkedReports
    post:
      operationId: AddLinkedReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: true|false
                type: boolean
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates new HistorySnapshot
      tags:
      - LinkedReports
  /LinkedReports({Id})/HistorySnapshots({HistoryId}):
    delete:
      operationId: DeleteLinkedReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id property of the HistorySnapshot
        in: path
        name: HistoryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: true|false
                type: boolean
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes a HistorySnapshot specified by HistoryId from the LinkedReport
        specified by Id.
      tags:
      - LinkedReports
    get:
      operationId: GetLinkedReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id property of the HistorySnapshot
        in: path
        name: HistoryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistorySnapshot'
          description: Returns a History Snapshot item.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets requested HistorySnapshot item specified by HistoryId of the LinkedReport
        specified by Id.
      tags:
      - LinkedReports
  /LinkedReports({Id})/HistorySnapshotOptions:
    get:
      operationId: GetLinkedReportHistorySnapshotOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistorySnapshotOptions'
          description: History Snapshot Options
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets HistorySnapshotOptions for the specified LinkedReport.
      tags:
      - LinkedReports
    put:
      operationId: SetLinkedReportHistorySnapshotOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistorySnapshotOptions'
        description: Modified HistorySnapshotOptions object.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates HistorySnapshotOptions property.
      tags:
      - LinkedReports
      x-codegen-request-body-name: HistorySnapshotOptions
  /LinkedReports({Id})/ParameterDefinitions:
    get:
      operationId: GetLinkedReportParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataReportParameterDefinitions'
          description: An array of ParameterDefinitions that are associated with the
            LinkedReport CatalogItem specified by the Id.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the ParameterDefinitions associated with the LinkedReport specified
        by the Id.
      tags:
      - LinkedReports
    patch:
      operationId: UpdateLinkedReportParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ReportParameterDefinitionPatch'
              type: array
        description: "Updated definitions for the ParameterDefinitions associated\
          \ with the LinkedReport, represented as ParameterDefinitionsPatch objects.\
          \ It is only necessary to include properties to be updated. All other property\
          \ values will be left unchanged."
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the ParameterDefinitions associated with the specified LinkedReport
        by the Id.
      tags:
      - LinkedReports
      x-codegen-request-body-name: ParameterDefinitions
  /LinkedReports({Id})/Policies:
    get:
      operationId: GetLinkedReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: An array of ItemPolicies that are associated with the specified
            LinkedReport CatalogItem.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the specified LinkedReport CatalogItem.
      tags:
      - LinkedReports
    put:
      operationId: SetLinkedReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the specified LinkedReport item.
      tags:
      - LinkedReports
      x-codegen-request-body-name: ItemPolicy
  /LinkedReports({Id})/Properties:
    get:
      operationId: GetLinkedReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets LinkedReport Properties (takes list of Property names to retrieve
        the values)
      tags:
      - LinkedReports
    put:
      operationId: UpdateLinkedReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the LinkedReport Properties included in the given list.
      tags:
      - LinkedReports
      x-codegen-request-body-name: Properties
  /Me:
    get:
      operationId: GetUserDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the User object for the current user.
      tags:
      - Me
  /MobileReports:
    get:
      operationId: GetMobileReports
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataMobileReport'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Retrieve array of MobileReport catalog items.
      tags:
      - MobileReports
    post:
      operationId: AddMobileReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileReport'
        description: The definition of the new MobileReport item.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileReport'
          description: Created
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates new MobileReport item
      tags:
      - MobileReports
      x-codegen-request-body-name: body
  /MobileReports({Id}):
    delete:
      operationId: DeleteMobileReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Delete the specified MobileReport.
      tags:
      - MobileReports
    get:
      operationId: GetMobileReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileReport'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Fetch MobileReport item by Id or path property.
      tags:
      - MobileReports
    patch:
      operationId: UpdateMobileReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileReport'
        description: Definition of the MobileReport item that replaces the current
          item on the server. It is only necessary to include properties to be updated.
          All other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileReport'
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified MobileReport CatalogItem using the provided definition.
      tags:
      - MobileReports
      x-codegen-request-body-name: body
  /MobileReports({Id})/AllowedActions:
    get:
      operationId: GetMobileReportAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; considering
        user permissions and product edition capabilities.
      tags:
      - MobileReports
  /MobileReports({Id})/Comments:
    get:
      operationId: GetMobileReportComments
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataComments'
          description: A collection of Comments associated to the MobileReport
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the Comments for a MobileReport specified by the Id.
      tags:
      - MobileReports
    post:
      operationId: AddMobileReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be created
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Comment associated to the specified MobileReport.
      tags:
      - MobileReports
      x-codegen-request-body-name: Comment
  /MobileReports({Id})/Comments({CommentId}):
    delete:
      operationId: DeleteMobileReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Comment associated to the MobileReport.
      tags:
      - MobileReports
    put:
      operationId: UpdateMobileReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be updated
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Comment specified by CommentId in the associated MobileReport.
      tags:
      - MobileReports
      x-codegen-request-body-name: Comment
  /MobileReports({Id})/Content/$value:
    get:
      operationId: GetMobileReportContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The content of the specified MobileReport CatalogItem.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the specified MobileReport CatalogItem.
      tags:
      - MobileReports
  /MobileReports({Id})/Policies:
    get:
      operationId: GetMobileReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies associated with the MobileReport catalog item.
      tags:
      - MobileReports
    put:
      operationId: SetMobileReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: Array of ItemPolicies to set on the MobileReport CatalogItem.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Sets ItemPolicies on the MobileReport item.
      tags:
      - MobileReports
      x-codegen-request-body-name: MobileReports
  /MobileReports({Id})/Properties:
    get:
      operationId: GetMobileReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets MobileReport Properties (takes list of Property names to retrieve
        the values)
      tags:
      - MobileReports
    put:
      operationId: UpdateMobileReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the MobileReport properties included in the given list.
      tags:
      - MobileReports
      x-codegen-request-body-name: Properties
  /Reports:
    get:
      operationId: GetReports
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataReports'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of Report CatalogItems.
      tags:
      - Reports
    post:
      operationId: AddReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        description: The definition of the new Report CatalogItem.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: Created
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Report CatalogItem.
      tags:
      - Reports
      x-codegen-request-body-name: Report
  /Reports({Id}):
    delete:
      operationId: DeleteReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Report.
      tags:
      - Reports
    get:
      operationId: GetReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a Report CatalogItem specified by the Id.
      tags:
      - Reports
    patch:
      operationId: UpdateReport
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        description: Definition of the Report item that updates the current item on
          the server. It is only necessary to include properties to be updated. All
          other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified Report CatalogItem using the provided definition.
      tags:
      - Reports
      x-codegen-request-body-name: Report
  /Reports({Id})/AllowedActions:
    get:
      operationId: GetReportAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; user permissions
        and product edition capabilities are considered when querying.
      tags:
      - Reports
  /Reports({Id})/CacheOptions:
    get:
      operationId: GetReportCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheOptions'
          description: Ok
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of CacheOptions for the Report specified by the Id
      tags:
      - Reports
    put:
      operationId: SetReportCacheOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheOptions'
        description: Updated definition for the CacheOptions content associated with
          the given Report.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces the CacheOptions content for a given Report using the provided
        definition.
      tags:
      - Reports
      x-codegen-request-body-name: CacheOptions
  /Reports({Id})/CacheRefreshPlans:
    get:
      operationId: GetReportCacheRefreshPlans
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataCacheRefreshPlans'
          description: Ok
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the CacheRefreshPlans for the Report specified by the Id
      tags:
      - Reports
  /Reports({Id})/Comments:
    get:
      operationId: GetReportComments
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataComments'
          description: A collection of Comments associated to the Report
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the Comments for a Report specified by the Id.
      tags:
      - Reports
    post:
      operationId: AddReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be created
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new Comment associated to the specified Report.
      tags:
      - Reports
      x-codegen-request-body-name: Comment
  /Reports({Id})/Comments({CommentId}):
    delete:
      operationId: DeleteReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Comment associated to the Report.
      tags:
      - Reports
    put:
      operationId: UpdateReportComment
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The Id of the Comment.
        in: path
        name: CommentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        description: The Comment to be updated
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Comment specified by CommentId in the associated Report.
      tags:
      - Reports
      x-codegen-request-body-name: Comment
  /Reports({Id})/Content/$value:
    get:
      operationId: GetReportContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The content of the Report CatalogItem specified by the Id.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the specified Report CatalogItem specified by the
        Id.
      tags:
      - Reports
  /Reports({Id})/DataSources:
    get:
      operationId: GetReportDataSources
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDataSources'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the DataSources associated with the Report specified by the Id.
      tags:
      - Reports
    put:
      operationId: SetReportDataSource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        description: Updated definition for the DataSource associated with the Report
          specified by the Id.
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSource definition associated with the Report specified
        by the Id.
      tags:
      - Reports
      x-codegen-request-body-name: DataSource
  /Reports({Id})/DependentItems:
    get:
      operationId: GetReportDependentItems
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataDependentItems'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Returns a list of CatalogItems that reference the Report specified
        by the Id.
      tags:
      - Reports
  /Reports({Id})/HistorySnapshots:
    get:
      operationId: GetReportHistorySnapshots
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistorySnapshot'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Get a list of HistorySnapshots for the specified Report.
      tags:
      - Reports
    post:
      operationId: AddReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: true|false
                type: boolean
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates new HistorySnapshot
      tags:
      - Reports
  /Reports({Id})/HistorySnapshots({HistoryId}):
    delete:
      operationId: DeleteReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The ID property of the HistorySnapshot
        in: path
        name: HistoryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: true|false
                type: boolean
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the requested Reports HistorySnapshot specified by HistoryId.
      tags:
      - Reports
    get:
      operationId: GetReportHistorySnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: The ID property of the HistorySnapshot
        in: path
        name: HistoryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistorySnapshot'
          description: Ok
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the requested Reports HistorySnapshot specified by HistoryId.
      tags:
      - Reports
  /Reports({Id})/HistorySnapshotOptions:
    get:
      operationId: GetReportHistorySnapshotOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistorySnapshotOptions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the HistorySnapshotOptions for the specified Report.
      tags:
      - Reports
    put:
      operationId: SetReportHistorySnapshotOptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistorySnapshotOptions'
        description: Modified HistorySnapshotOptions object.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates HistorySnapshotOptions for the specified Report.
      tags:
      - Reports
      x-codegen-request-body-name: HistorySnapshotOptions
  /Reports({Id})/Model.CheckDataSourceConnection:
    post:
      operationId: CheckReportDataSourceConnection
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The name of the DataSource to check.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceCheckResult'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Checks the status of the specified Reports DataSource connection.
      tags:
      - Reports
      x-codegen-request-body-name: DataSourceName
  /Reports({Id})/Model.UpdateCacheSnapshot:
    post:
      operationId: UpdateCacheSnapshot
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCacheSnapshotResult'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the execution cache snapshot for the specified report.
      tags:
      - Reports
  /Reports({Id})/ParameterDefinitions:
    get:
      operationId: GetReportParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties_2'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the ParameterDefinitions associated with the Report specified
        by the Id.
      tags:
      - Reports
    patch:
      operationId: UpdateReportParameterDefinitions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ReportParameterDefinitionPatch'
              type: array
        description: "Updated definitions for the ParameterDefinitions associated\
          \ with the Report, represented as ParameterDefinitionsPatch object. It is\
          \ only necessary to include properties to be updated. All other property\
          \ values will be left unchanged."
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the ParameterDefinitions associated with the Report specified
        by Id.
      tags:
      - Reports
      x-codegen-request-body-name: ParameterDefinitions
  /Reports({Id})/Policies:
    get:
      operationId: GetReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets policies associated with the specified Report CatalogItem.
      tags:
      - Reports
    put:
      operationId: SetReportPolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: The ItemPolicy definitions that will be replaced.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies associated with the Report specified by the Id.
      tags:
      - Reports
      x-codegen-request-body-name: ItemPolicies
  /Reports({Id})/Properties:
    get:
      operationId: GetReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the specified Reports Properties (takes list of Property names
        to retrieve the values)
      tags:
      - Reports
    put:
      operationId: UpdateReportProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Report Properties included in the given list.
      tags:
      - Reports
      x-codegen-request-body-name: Properties
  /Reports({Id})/SharedDataSets:
    get:
      operationId: GetReportSharedDataSets
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DataSet'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the shared DataSets for the specified Report.
      tags:
      - Reports
    put:
      operationId: SetReportSharedDataSets
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DataSet'
              type: array
        description: Updated DataSet definitions for the specified Report.
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the DataSet definitions associated with the specified Report.
      tags:
      - Reports
      x-codegen-request-body-name: DataSets
  /Reports({Id})/Subscriptions:
    get:
      operationId: GetReportSubscriptions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)"
        in: query
        name: $expand
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the Subscriptions for the specified Report.
      tags:
      - Reports
  /Resources:
    get:
      operationId: GetResources
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataResources'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of Resource catalog items
      tags:
      - Resources
    post:
      operationId: AddResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
        description: The definition of the new Resource item.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Created
        "400":
          content: {}
          description: Couldn't understand your request.
        "409":
          content: {}
          description: Conflict. Item already exists.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates new Resource item
      tags:
      - Resources
      x-codegen-request-body-name: Resource
  /Resources({Id}):
    delete:
      operationId: DeleteResource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Delete the specified Resource catalog item.
      tags:
      - Resources
    get:
      operationId: GetResource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Get the specified Resource.
      tags:
      - Resources
    patch:
      operationId: UpdateResource
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
        description: Definition of the Resource item that replaces the current item
          on the server. It is only necessary to include properties to be updated.
          All other property values on the CatalogItem will be left unchanged.
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the specified Resource catalog item.
      tags:
      - Resources
      x-codegen-request-body-name: Resource
  /Resources({Id})/AllowedActions:
    get:
      operationId: GetResourceAllowedActions
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of actions allowed in the current session; considering
        user permissions and product edition capabilities.
      tags:
      - Resources
  /Resources({Id})/Content/$value:
    get:
      operationId: GetResourceContent
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Ok
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the content of the specified Resource CatalogItem specified by
        the Id.
      tags:
      - Resources
  /Resources({Id})/Policies:
    get:
      operationId: GetResourcePolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemPolicy'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets ItemPolicies on the Resource item.
      tags:
      - Resources
    put:
      operationId: SetResourcePolicies
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ItemPolicy'
              type: array
        description: Array of ItemPolicies to set on the Resource CatalogItem.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces ItemPolicies on the Resource item.
      tags:
      - Resources
      x-codegen-request-body-name: Policies
  /Resources({Id})/Properties:
    get:
      operationId: GetResourceProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: Properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the specified Resources Properties (takes list of Property names
        to retrieve the values)
      tags:
      - Resources
    put:
      operationId: UpdateResourceProperties
      parameters:
      - description: |-
          The key (GUID or path) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
          path example: path='/folder1/folder2/item'
          If the path itself contains single quote, it should be escaped - add another single quote.
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: The Properties that will be updated.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Resource Properties included in the given list.
      tags:
      - Resources
      x-codegen-request-body-name: Properties
  /Session:
    delete:
      operationId: DeleteSession
      responses:
        "200":
          content: {}
          description: An empty session cookie is sent with the response.
        "401":
          content: {}
          description: The user is not yet authenticated.
      summary: Deletes the currently active session
      tags:
      - Session
    post:
      operationId: CreateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        description: The credentials of the user to logon as
        required: true
      responses:
        "201":
          content: {}
          description: A session for the user credentials was created and a forms
            authentication cookie was sent as part of the response.
        "400":
          content: {}
          description: Couldn't understand your request.
        "401":
          content: {}
          description: The credentials provided are invalid.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates a new session
      tags:
      - Session
      x-codegen-request-body-name: UserCredentials
  /Subscriptions:
    get:
      operationId: GetSubscriptions
      parameters:
      - description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
        in: query
        name: $top
        schema:
          type: integer
      - description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
        in: query
        name: $skip
        schema:
          type: integer
      - description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
        in: query
        name: $filter
        schema:
          type: string
      - description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
        in: query
        name: $count
        schema:
          type: string
      - description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
        in: query
        name: $orderBy
        schema:
          type: string
      - description: "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)"
        in: query
        name: $expand
        schema:
          type: string
      - description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
        in: query
        name: $select
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets an array of Subscriptions.
      tags:
      - Subscriptions
    post:
      operationId: AddSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: The definition of the new Subscription item.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Creates new Subscription item
      tags:
      - Subscriptions
      x-codegen-request-body-name: Subscription
  /Subscriptions({Id}):
    delete:
      operationId: DeleteSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Deletes the specified Subscription.
      tags:
      - Subscriptions
    get:
      operationId: GetSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Ok
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Get the specified Subscription.
      tags:
      - Subscriptions
    patch:
      operationId: UpdateSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Definition of the Subscription that updates the current item
          on the server. It is only necessary to include properties to be updated.
          All other property values will be left unchanged.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the Subscription item using Id property as key.
      tags:
      - Subscriptions
      x-codegen-request-body-name: Subscription
    put:
      operationId: SetSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        description: Subscription item to update.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Replaces the Subscription item using Id property as key.
      tags:
      - Subscriptions
      x-codegen-request-body-name: Subscription
  /Subscriptions({Id})/Model.Enable:
    post:
      operationId: EnableSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Enables a Subscription specified by the Id.
      tags:
      - Subscriptions
  /Subscriptions({Id})/Model.Execute:
    post:
      operationId: ExecuteSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Executes the Subscription specified by the Id.
      tags:
      - Subscriptions
  /Subscriptions({Id})/Model.Disable:
    post:
      operationId: DisableSubscription
      parameters:
      - description: |-
          The key (GUID) that uniquely identifies the object.
          GUID example: 01234567-89ab-cdef-0123-456789abcdef
        in: path
        name: Id
        required: true
        schema:
          format: string
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Couldn't understand your request.
        "404":
          content: {}
          description: Not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Disables the Subscription specified by the Id.
      tags:
      - Subscriptions
  /System:
    get:
      operationId: GetSystemInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Get SystemInformation
      tags:
      - System
  /System/AllowedActions:
    get:
      operationId: GetSystemAllowedActions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataAllowedActions'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets a list of system level actions allowed in the current session;
        user permissions and product edition capabilities are considered when querying.
      tags:
      - System
  /System/Policies:
    get:
      operationId: GetSystemPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Policy'
                type: array
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the System Policies.
      tags:
      - System
    put:
      operationId: SetSystemPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemPolicy'
        description: The SystemPolicy object that contains settings to apply.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the System's Policies.
      tags:
      - System
      x-codegen-request-body-name: SystemPolicy
  /System/Properties:
    get:
      operationId: GetSystemProperties
      parameters:
      - description: Names for the Properties to be returned.
        explode: false
        in: query
        name: properties
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataProperties'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Gets the Systems Properties (takes list of Property names to retrieve
        the values)
      tags:
      - System
    patch:
      operationId: UpdateSystemProperties
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Property'
              type: array
        description: Definition of the SystemProperties that updates the current item
          on the server. It is only necessary to include properties to be updated.
          All other property values will be left unchanged.
        required: true
      responses:
        "200":
          content: {}
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/odata.error'
          description: Error
      summary: Updates the System Properties with the given property list.
      tags:
      - System
      x-codegen-request-body-name: Properties
components:
  parameters:
    PathOrId:
      description: |-
        The key (GUID or path) that uniquely identifies the object.
        GUID example: 01234567-89ab-cdef-0123-456789abcdef
        path example: path='/folder1/folder2/item'
        If the path itself contains single quote, it should be escaped - add another single quote.
      in: path
      name: Id
      required: true
      schema:
        format: string
        type: string
    Id:
      description: |-
        The key (GUID) that uniquely identifies the object.
        GUID example: 01234567-89ab-cdef-0123-456789abcdef
      in: path
      name: Id
      required: true
      schema:
        format: string
        type: string
    top:
      description: "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374630)"
      in: query
      name: $top
      schema:
        type: integer
    skip:
      description: "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374631)"
      in: query
      name: $skip
      schema:
        type: integer
    count:
      description: "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374632)"
      in: query
      name: $count
      schema:
        type: string
    filter:
      description: "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374625)"
      in: query
      name: $filter
      schema:
        type: string
    orderby:
      description: "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374629)"
      in: query
      name: $orderBy
      schema:
        type: string
    expand:
      description: "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374621)"
      in: query
      name: $expand
      schema:
        type: string
    select:
      description: "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part1-protocol.html#_Toc445374620)"
      in: query
      name: $select
      schema:
        type: string
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/odata.error'
      description: Error
  schemas:
    AllowedAction:
      description: An object that specifies an allowed action on a CatalogItem.
      example:
        Action: Action
      properties:
        Action:
          description: The allowed action.
          format: string
          type: string
      title: AllowedAction
      type: object
    BulkOperationsResult:
      description: Result of bulk operations like MoveItems and DeleteItems
      example:
        FailedOperations:
        - FailedOperations
        - FailedOperations
        HasErrors: true
      properties:
        FailedOperations:
          items:
            type: string
          type: array
        HasErrors:
          format: true|false
          type: boolean
      title: BulkOperationsResult
      type: object
    CacheOptions:
      description: An object that specifies options for a data cache.
      example:
        ExecutionType: null
        Expiration:
          Schedule:
            Definition:
              Recurrence:
                DailyRecurrence:
                  DaysInterval: 6
                WeeklyRecurrence:
                  WeeksIntervalSpecified: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WeeksInterval: 1
                MonthlyDOWRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WhichWeekSpecified: true
                  WhichWeek: null
                MonthlyRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  Days: Days
                MinuteRecurrence:
                  MinutesInterval: 0
              StartDateTime: 2017-04-13T15:51:04Z
              EndDateSpecified: true
              EndDate: 2017-04-13T15:51:04Z
            ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Minutes: 0
      properties:
        ExecutionType:
          $ref: '#/components/schemas/ItemExecutionType'
        Expiration:
          $ref: '#/components/schemas/ExpirationReference'
      title: CacheOptions
      type: object
    CacheRefreshPlan:
      description: An object that specifies a plan for data cache refresh. The plan
        can be stored and re-used by multiple CatalogItems.
      example:
        LastStatus: LastStatus
        Owner: Owner
        Description: Description
        EventType: EventType
        Schedule:
          Definition:
            Recurrence:
              DailyRecurrence:
                DaysInterval: 6
              WeeklyRecurrence:
                WeeksIntervalSpecified: true
                DaysOfWeek:
                  Monday: true
                  Thursday: true
                  Friday: true
                  Sunday: true
                  Wednesday: true
                  Tuesday: true
                  Saturday: true
                WeeksInterval: 1
              MonthlyDOWRecurrence:
                MonthsOfYear:
                  June: true
                  October: true
                  December: true
                  May: true
                  September: true
                  March: true
                  July: true
                  January: true
                  February: true
                  April: true
                  August: true
                  November: true
                DaysOfWeek:
                  Monday: true
                  Thursday: true
                  Friday: true
                  Sunday: true
                  Wednesday: true
                  Tuesday: true
                  Saturday: true
                WhichWeekSpecified: true
                WhichWeek: null
              MonthlyRecurrence:
                MonthsOfYear:
                  June: true
                  October: true
                  December: true
                  May: true
                  September: true
                  March: true
                  July: true
                  January: true
                  February: true
                  April: true
                  August: true
                  November: true
                Days: Days
              MinuteRecurrence:
                MinutesInterval: 0
            StartDateTime: 2017-04-13T15:51:04Z
            EndDateSpecified: true
            EndDate: 2017-04-13T15:51:04Z
          ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LastRunTime: 2017-04-13T15:51:04Z
        CatalogItemPath: CatalogItemPath
        Id: 01234567-89ab-cdef-0123-456789abcdef
        ModifiedBy: ModifiedBy
        ModifiedDate: 2017-04-13T15:51:04Z
        ParameterValues:
        - IsValueFieldReference: true
          Value: Value
          Name: Name
        - IsValueFieldReference: true
          Value: Value
          Name: Name
      properties:
        Id:
          description: A unique UUID value that specifies the identifier by which
            this CacheRefreshPlan can be referenced in the definition of other items.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        Owner:
          description: A string value that specifies the owner of the CacheRefreshPlan.
          format: string
          type: string
        Description:
          description: A string value that contains descriptive text about the CacheRefreshPlan.
          format: string
          type: string
        CatalogItemPath:
          description: A string value that contains the fully qualified URL path location
            of the CatalogItem that represents the CacheRefreshPlan.
          format: string
          type: string
        EventType:
          description: A string value that specifies which EventType to use for logging.
          format: string
          type: string
        Schedule:
          $ref: '#/components/schemas/ScheduleReference'
        LastRunTime:
          description: A date-time value that specifies the date-time of the last
            run of the CacheRefreshPlan.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        LastStatus:
          description: A string value that contains the network username of the last
            user to modify the CacheRefreshPlan.
          format: string
          type: string
        ModifiedBy:
          description: A string value that contains the network user name of the last
            user to modify the CacheRefreshPlan
          format: string
          type: string
        ModifiedDate:
          description: A string value that contains the date-time of the last modification
            to the CacheRefreshPlan.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        ParameterValues:
          description: An array of parameter values for the CacheRefreshPlan. All
            parameters without a default value MUST have a value specified.
          items:
            $ref: '#/components/schemas/ParameterValue'
          type: array
      title: CacheRefreshPlan
      type: object
    CatalogItem:
      description: "CatalogItem is an abstract type that contains the common properties\
        \ of all the types of CatalogItems. Hence, it is the base type from which\
        \ the other CatalogItem types are derived."
      example:
        Path: Path
        Description: Description
        CreatedBy: CreatedBy
        ContentType: ContentType
        Size: 6
        ModifiedBy: ModifiedBy
        ModifiedDate: 2017-04-13T15:51:04Z
        IsFavorite: true
        ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
        Name: Name
        Type: null
        Content: Content
        CreatedDate: 2017-04-13T15:51:04Z
        Hidden: true
        Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        Id:
          description: A unique UUID value that specifies the identifier by which
            this CatalogItem can be referenced in requests or by other defined objects.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        Name:
          description: A string value that specifies the name for the CatalogItem.
            This name is typically displayed in the user interface.
          format: string
          type: string
        Description:
          description: A string value that contains descriptive text about the CatalogItem.
          format: string
          type: string
        Path:
          description: A string value that contains the full server path for the CatalogItem.
            Path is defined as an alternate key on the CatalogItem and can be used
            as the parameter by which CatalogItem can be referenced in requests or
            by other defined objects.
          format: string
          type: string
        Type:
          $ref: '#/components/schemas/CatalogItemType'
        Hidden:
          description: "A boolean value that indicates if the CatalogItem is hidden.\
            \ If true, the item will generally not appear in listings of CatalogItems\
            \ within the parent item."
          format: true|false
          type: boolean
        Size:
          description: An Int64 value that contains the size of the CatalogItem in
            bytes.
          format: int64
          type: integer
        ModifiedBy:
          description: A string value that contains the network user name of the last
            user to modify the CatalogItem.
          format: string
          type: string
        ModifiedDate:
          description: A string value that contains the date-time of the last modification
            to the CatalogItem.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        CreatedBy:
          description: A string value that represents the network user name of the
            user who originally created the CatalogItem.
          format: string
          type: string
        CreatedDate:
          description: A string that contains the date-time of the creation of the
            CatalogItem.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        ParentFolderId:
          description: A unique UUID value that specifies the identifier of the Folder
            CatalogItem that contains this CatalogItem.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        ContentType:
          description: A string value that contains a SOAP MIME-type that is associated
            with the CatalogItem.
          format: string
          type: string
        Content:
          description: "A string value that contains binary encoding by base64url\
            \ encoding rules. The value of this property is not processed by the server.\
            \ In object creation the server receives and stores a value, and in object\
            \ retrieval the server returns the previously stored value."
          type: string
        IsFavorite:
          description: A boolean value that specifies whether the CatalogItem is designated
            as a Favorite.
          format: true|false
          type: boolean
      title: CatalogItem
      type: object
    CatalogItemType:
      description: An enumeration of values that specifies the type of the CatalogItem.
      enum:
      - Unknown
      - Folder
      - Report
      - DataSource
      - DataSet
      - Component
      - Resource
      - Kpi
      - MobileReport
      - LinkedReport
      - ReportModel
      title: CatalogItemType
      type: string
    CredentialsStoredInServer:
      description: "This object holds credentials for connections to an external data\
        \ source. The object is stored on the Report Server for later retrieval and\
        \ use. NOTE: This object represents a security risk as its properties can\
        \ be seen in plain text over the HTTP protocol; HTTPS is recommended."
      properties:
        UserName:
          description: A string value that contains the user name to be used to connect
            to an external data source.
          format: string
          type: string
        Password:
          description: A string value that contains the password to be used to connect
            to an external data source.
          format: string
          type: string
        UseAsWindowsCredentials:
          description: A boolean value that indicates whether the supplied credentials
            should be used as Windows credentials.
          format: true|false
          type: boolean
        ImpersonateAuthenticatedUser:
          description: A boolean value that indicates whether the session should impersonate
            the user for the supplied credentials.
          format: true|false
          type: boolean
      title: CredentialsStoredInServer
      type: object
    CredentialsSuppliedByUser:
      description: An object that contains information about prompting a user for
        credentials for connections to an external data source.
      properties:
        DisplayText:
          description: A string value that contains text used to prompt a user to
            supply credentials for connections to an external data source.
          format: string
          type: string
        UseAsWindowsCredentials:
          description: A boolean value that indicates whether credentials the user
            supplies in a prompt should be used as Windows credentials.
          format: true|false
          type: boolean
      title: CredentialsSuppliedByUser
      type: object
    Comment:
      description: An object that specifies a comment that is attached to a CatalogItem.
      example:
        UserName: UserName
        AttachmentPath: AttachmentPath
        ThreadId: 01234567-89ab-cdef-0123-456789abcdef
        CreatedDate: 2017-04-13T15:51:04Z
        Text: Text
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ModifiedDate: 2017-04-13T15:51:04Z
        ItemId: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        Id:
          description: A unique UUID value that specifies the identifier of the comment.
          format: uuid
          type: string
        ItemId:
          description: A unique UUID value that specifies the identifier of the CatalogItem
            item to which the comment is attached.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        UserName:
          description: ' A string value that represents the user who created the comment
            item.'
          format: string
          type: string
        ThreadId:
          description: A unique UUID value that specifies the identifier of the thread
            of the comment. A comment thread can be used to group comments that are
            a response to one another in one grouping.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        AttachmentPath:
          description: A string value that specifies the server path to an attachment
            that is part of the comment.
          format: string
          type: string
        Text:
          description: A string value that contains the text of the comment.
          format: string
          type: string
        CreatedDate:
          description: A string that contains the date-time of the creation of the
            comment.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        ModifiedDate:
          description: A string value that contains the date-time of the last modification
            to the comment.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
      title: Comment
      type: object
    DailyRecurrence:
      description: Represents the intervals at which a scheduled report runs. Intervals
        are specified in days.
      example:
        DaysInterval: 6
      properties:
        DaysInterval:
          description: An Int32 value representing interval in days.
          format: int32
          type: integer
      title: DailyRecurrence
      type: object
    DataSet:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/DataSet_1'
    DataSetField:
      description: An object that represents a field in a DataSet.
      example:
        DataType: null
        Name: Name
      properties:
        Name:
          type: string
        DataType:
          $ref: '#/components/schemas/ReportParameterType'
      title: DataSetField
      type: object
    DataSetItem:
      description: An object that contains additional dataset properties for the MobileReportManifest
      properties:
        TimeUnit:
          description: "The time unit for the DataSetItem. The possible values for\
            \ this string are the following: 'Year', 'Quarter', 'Month', 'Weekday',\
            \ 'Hour'."
          format: string
          type: string
        DateTimeColumn:
          description: A string value that specifies the name of the column in the
            DataSetItem that represents date and time.
          format: string
          type: string
      title: DataSetItem
      type: object
    DataSetParameter:
      description: An object that contains the name and value for a parameter to be
        used when executing a DataSet.
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          description: The name of the parameter.
          format: string
          type: string
        Value:
          description: The value to set for the parameter.
          format: string
          type: string
      title: DataSetParameter
      type: object
    DataSetParameterInfo:
      description: An object that contains information about a parameter in a DataSet.
      example:
        DefaultValue: DefaultValue
        IsExpression: true
        IsMultiValued: true
        DataType: null
        Nullable: true
        Name: Name
      properties:
        Name:
          description: The name of the parameter.
          format: string
          type: string
        DefaultValue:
          description: The default value for the parameter.
          format: string
          type: string
        Nullable:
          description: Specifies whether the parameter can be null.
          format: true|false
          type: boolean
        DataType:
          $ref: '#/components/schemas/ReportParameterType'
        IsExpression:
          description: Specifies whether the parameter is an expression.
          format: true|false
          type: boolean
        IsMultiValued:
          description: Specifies whether the parameter contains multiple values.
          format: true|false
          type: boolean
      title: DataSetParameterInfo
      type: object
    DataSetSchema:
      description: An object that reprents the schema for a DataSet
      example:
        Fields:
        - DataType: null
          Name: Name
        - DataType: null
          Name: Name
        Parameters:
        - DefaultValue: DefaultValue
          IsExpression: true
          IsMultiValued: true
          DataType: null
          Nullable: true
          Name: Name
        - DefaultValue: DefaultValue
          IsExpression: true
          IsMultiValued: true
          DataType: null
          Nullable: true
          Name: Name
        Name: Name
      properties:
        Name:
          description: The name of the DataSet.
          format: string
          type: string
        Fields:
          description: The fields of the DataSet.
          items:
            $ref: '#/components/schemas/DataSetField'
          type: array
        Parameters:
          description: The parameters for the DataSet.
          items:
            $ref: '#/components/schemas/DataSetParameterInfo'
          type: array
      title: DataSetSchema
      type: object
    DataSource:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/DataSource_1'
    DataSourceCheckResult:
      description: Represents the result of testing a DataSource connection
      example:
        ErrorMessage: ErrorMessage
        IsSuccessful: true
      properties:
        IsSuccessful:
          format: true|false
          type: boolean
        ErrorMessage:
          type: string
      title: DataSourceCheckResult
      type: object
    DaysOfWeekSelector:
      description: Represents the days of the week on which a scheduled report runs.
      example:
        Monday: true
        Thursday: true
        Friday: true
        Sunday: true
        Wednesday: true
        Tuesday: true
        Saturday: true
      properties:
        Sunday:
          format: true|false
          type: boolean
        Monday:
          format: true|false
          type: boolean
        Tuesday:
          format: true|false
          type: boolean
        Wednesday:
          format: true|false
          type: boolean
        Thursday:
          format: true|false
          type: boolean
        Friday:
          format: true|false
          type: boolean
        Saturday:
          format: true|false
          type: boolean
      title: DaysOfWeekSelector
      type: object
    DrillthroughTarget:
      description: An object that specifies the type of the target of a drillthrough
        operation.
      properties:
        DrillthroughTargetType:
          $ref: '#/components/schemas/DrillthroughTargetType'
      title: DrillthroughTarget
      type: object
    DrillthroughTargetType:
      description: An enumeration of values that specify the available types for the
        target object of a drillthrough operation.
      enum:
      - Url
      - CatalogItem
      title: DrillthroughTargetType
      type: string
    ExpirationReference:
      description: "An object that contains a specification for cache expiration,\
        \ expressed either in minutes or by a schedule."
      example:
        Schedule:
          Definition:
            Recurrence:
              DailyRecurrence:
                DaysInterval: 6
              WeeklyRecurrence:
                WeeksIntervalSpecified: true
                DaysOfWeek:
                  Monday: true
                  Thursday: true
                  Friday: true
                  Sunday: true
                  Wednesday: true
                  Tuesday: true
                  Saturday: true
                WeeksInterval: 1
              MonthlyDOWRecurrence:
                MonthsOfYear:
                  June: true
                  October: true
                  December: true
                  May: true
                  September: true
                  March: true
                  July: true
                  January: true
                  February: true
                  April: true
                  August: true
                  November: true
                DaysOfWeek:
                  Monday: true
                  Thursday: true
                  Friday: true
                  Sunday: true
                  Wednesday: true
                  Tuesday: true
                  Saturday: true
                WhichWeekSpecified: true
                WhichWeek: null
              MonthlyRecurrence:
                MonthsOfYear:
                  June: true
                  October: true
                  December: true
                  May: true
                  September: true
                  March: true
                  July: true
                  January: true
                  February: true
                  April: true
                  August: true
                  November: true
                Days: Days
              MinuteRecurrence:
                MinutesInterval: 0
            StartDateTime: 2017-04-13T15:51:04Z
            EndDateSpecified: true
            EndDate: 2017-04-13T15:51:04Z
          ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Minutes: 0
      properties:
        Minutes:
          description: Number of minutes until expiration.
          format: int32
          type: integer
        Schedule:
          $ref: '#/components/schemas/ScheduleReference'
      title: ExpirationReference
      type: object
    Extension:
      description: An object that holds the definition of a Reporting Services extension.
      example:
        LocalizedName: LocalizedName
        ExtensionType: null
        Visible: true
        Name: Name
      properties:
        ExtensionType:
          $ref: '#/components/schemas/ExtensionType'
        Name:
          description: A string value that specifies the name for the Extension. This
            name will typically be displayed in the user interface.
          format: string
          type: string
        LocalizedName:
          description: A string value that specifies a localized name for the Extension.
          format: string
          type: string
        Visible:
          description: "A Boolean value that indicates if the Extension is visible.\
            \ If false, the item will generally not appear in listings of available\
            \ extensions."
          format: true|false
          type: boolean
      title: Extension
      type: object
    ExtensionParameter:
      description: An object that contains the definition of a Reporting Services
        extension's parameter.
      example:
        ReadOnly: true
        Required: true
        ValidValues:
        - Label: Label
          Value: Value
        - Label: Label
          Value: Value
        Encrypted: true
        IsPassword: true
        DisplayName: DisplayName
        Value: Value
        Error: Error
        ValidValuesIsNull: true
        Name: Name
      properties:
        Name:
          description: A string value that specifies the name for the ExtensionParameter.
          format: string
          type: string
        DisplayName:
          description: The name of the extension setting that is displayed to the
            user.
          format: string
          type: string
        Required:
          description: Indicates whether the value is required.
          format: true|false
          type: boolean
        ReadOnly:
          description: Indicates whether the setting is read-only.
          format: true|false
          type: boolean
        Value:
          description: A string that represents the value of an extension parameter.
          format: string
          type: string
        Error:
          description: An error that describes a problem with the value of the setting.
          format: string
          type: string
        Encrypted:
          description: Indicates whether the extension parameter value should be encrypted
            in the Report Server database.
          format: true|false
          type: boolean
        IsPassword:
          description: A Boolean value that indicates whether the ExtensionParameter
            is a password.
          format: true|false
          type: boolean
        ValidValues:
          description: A set of values that can be configured for the setting.
          items:
            $ref: '#/components/schemas/ValidValue'
          type: array
        ValidValuesIsNull:
          description: A Boolean value that indicates whether the ValidValues property
            is null.
          format: true|false
          type: boolean
      title: ExtensionParameter
      type: object
    ExtensionSettings:
      description: An object that defines parameter values that are used for a Reporting
        Services extension.
      example:
        Extension: Extension
        ParameterValues:
          IsValueFieldReference: true
          Value: Value
          Name: Name
      properties:
        Extension:
          description: A string value that specifies the name of the Reporting Services
            extension that the settings in the object apply to.
          format: string
          type: string
        ParameterValues:
          $ref: '#/components/schemas/ParameterValue'
      title: ExtensionSettings
      type: object
    ExtensionType:
      description: An enumeration of Reporting Services extension types.
      enum:
      - Delivery
      - DeliveryUI
      - Render
      - Data
      - All
      title: ExtensionType
      type: string
    FavoriteItem:
      description: An object that a reference to a CatalogItem that the user has marked
        as a favorite.
      example:
        Item:
          Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
        Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        Id:
          description: A unique UUID value that specifies the identifier of the CatalogItem
            that is marked as a favorite.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        Item:
          $ref: '#/components/schemas/CatalogItem'
      title: FavoriteItem
      type: object
    Folder:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - description: "The Folder object is derived from the abstract type, CatalogItem,\
          \ and therefore contains all of its properties. This object specifies the\
          \ definition of a Folder on the server. It does not contain additional properties\
          \ beyond those specified for the base type, CatalogItem."
        title: Folder
        type: object
    HistorySnapshot:
      description: An object that contains history snapshot information.
      example:
        CreationDate: 2017-04-13T15:51:04Z
        HistoryId: HistoryId
        Size: 0
        Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        Id:
          description: A unique UUID value that specifies the identifier of the CatalogItem
            for which this is a HistorySnapshot.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        HistoryId:
          description: "A string that contains the date-time of the execution of the\
            \ HistorySnapshot. This, together with the Id of the CatalogItem, identifies\
            \ this HistorySnapshot"
          format: string
          type: string
        CreationDate:
          description: A string that contains the date-time of the creation of the
            HistorySnapshot.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        Size:
          description: Size of the HistorySnapshot.
          format: int32
          type: integer
      title: HistorySnapshot
      type: object
    HistorySnapshotOptions:
      description: An object that has a reference to a history snapshot option for
        a given catalog.
      example:
        CatalogItemId: 01234567-89ab-cdef-0123-456789abcdef
        HistorySnapshotsOptions:
          SystemLimit: 6
          UseDefaultSystemLimit: true
          Schedule: null
          ManualCreationEnabled: true
          KeepExecutionSnapshots: true
          ScopedLimit: 0
      properties:
        CatalogItemId:
          description: The Id of the CatalogItem that this HistorySnapshotOptions
            belongs to.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        HistorySnapshotsOptions:
          $ref: '#/components/schemas/ReportHistorySnapshotsOptions'
      title: HistorySnapshotOptions
      type: object
    ItemExecutionType:
      description: "An enumeration that specifies whether the item's execution is\
        \ with live data, cached data, or based on a data snapshot."
      enum:
      - Live
      - Cache
      - Snapshot
      title: ItemExecutionType
      type: string
    ItemPolicy:
      description: An object that specifies the access policy for the item.
      example:
        InheritParentPolicy: true
        Policies:
        - GroupUserName: GroupUserName
          Roles:
          - Description: Description
            Name: Name
          - Description: Description
            Name: Name
        - GroupUserName: GroupUserName
          Roles:
          - Description: Description
            Name: Name
          - Description: Description
            Name: Name
      properties:
        InheritParentPolicy:
          description: A Boolean value that indicates whether the access policy is
            to be inherited from the item's parent item.
          format: true|false
          type: boolean
        Policies:
          description: 'An array of objects of type Policy that specify the access
            policies to be applied to the item.      '
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      title: ItemPolicy
      type: object
    Kpi:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/Kpi_1'
    KpiData:
      description: An object that specifies the metadata source for the component
        parts of a KPI.
      properties:
        Value:
          $ref: '#/components/schemas/KpiDataItem'
        Goal:
          $ref: '#/components/schemas/KpiDataItem'
        Status:
          $ref: '#/components/schemas/KpiDataItem'
        TrendSet:
          $ref: '#/components/schemas/KpiDataItem'
      title: KpiData
      type: object
    KpiDataItem:
      description: An enumeration value that specifies the type of the KPI data item.
      properties:
        Type:
          $ref: '#/components/schemas/KpiDataItemType'
      title: KpiDataItem
      type: object
    KpiDataItemType:
      description: An enumeration of values that specifies whether the KPI data item
        is static or shared.
      enum:
      - Static
      - Shared
      title: KpiDataItemType
      type: string
    KpiSharedDataItemAggregation:
      description: An enumeration of values that specify the available aggregations
        for KPIs.
      enum:
      - None
      - First
      - Last
      - Min
      - Max
      - Average
      - Sum
      title: KpiSharedDataItemAggregation
      type: string
    KpiValueFormat:
      description: An enumeration of values that specifies the available formats for
        KPI values.
      enum:
      - General
      - Abbreviated
      - DefaultCurrency
      - DefaultCurrencyWithDecimals
      - AbbreviatedDefaultCurrency
      - Percent
      - PercentWithDecimals
      title: KpiValueFormat
      type: string
    KpiValues:
      description: An object that specifies the current set of values for a KPI.
      properties:
        Value:
          description: A string value that specifies the value of the Value Property
            for the KPI.
          format: string
          type: string
        Goal:
          description: A Double value that specifies the value of the Goal Property
            for the KPI.
          format: double
          type: number
        Status:
          description: A Double value that specifies the value of the Status Property
            for the KPI.
          format: double
          type: number
        TrendSet:
          description: An array of values that specifies the trendset for the KPI.
          items:
            format: double
            type: integer
          type: array
      title: KpiValues
      type: object
    KpiVisualization:
      description: An enumeration of values that specifies the available types of
        visualizations for a KPI.
      enum:
      - None
      - Bar
      - Line
      - Step
      - Area
      title: KpiVisualization
      type: string
    LinkedReport:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/LinkedReport_1'
    ManifestItem:
      properties:
        Id:
          description: A unique UUID value that specifies the identifier by which
            this defined item can be referenced in requests or in other defined objects.
          format: uuid
          type: string
        Path:
          description: A string value that contains the complete URL for the defined
            item.
          type: string
        Name:
          description: A string value that specifies the name for the item. This name
            will typically be displayed in the user interface.
          type: string
        Hash:
          description: A string value that contains an SHA256 hash of the contents
            of the item.
          type: string
      type: object
    MinuteRecurrence:
      description: Represents the intervals at which a scheduled report runs. Intervals
        are specified in minutes.
      example:
        MinutesInterval: 0
      properties:
        MinutesInterval:
          description: An Int32 value representing interval in minutes.
          format: int32
          type: integer
      title: MinuteRecurrence
      type: object
    MobileReport:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/MobileReport_1'
    MobileReportManifest:
      description: An object that contains the specification of the contents of a
        mobile report.
      properties:
        Resources:
          description: An array of items of type ResourceGroup that specify the resources
            referenced in this MobileReport. A Resource is a generalized object and
            its content type is undefined.  A client must be able to understand the
            content returned in the Resource.
          items:
            $ref: '#/components/schemas/ResourceGroup'
          type: array
        DataSets:
          description: An array of objects of type DataSetItem that specifies the
            DataSets referenced in this MobileReport.
          items:
            $ref: '#/components/schemas/DataSetItem'
          type: array
        Thumbnails:
          description: An array of items of type ThumbnailItem that contains the Thumbnails
            associated with the MobileReport.
          items:
            $ref: '#/components/schemas/ThumbnailItem'
          type: array
      title: MobileReportManifest
      type: object
    MobileReportResourceGroupType:
      description: An enumeration of values that specifies the known types for MobileReport
        Resources.
      enum:
      - Unknown
      - Style
      - Map
      title: MobileReportResourceGroupType
      type: string
    MobileReportThumbnailType:
      description: An enumeration of values that specifies the available orientations
        for Thumbnails.
      enum:
      - Unknown
      - Landscape
      - Portrait
      title: MobileReportThumbnailType
      type: string
    MonthlyDOWRecurrence:
      description: "Represents the dates on which a scheduled report runs, typically\
        \ by month, week, and day of the week."
      example:
        MonthsOfYear:
          June: true
          October: true
          December: true
          May: true
          September: true
          March: true
          July: true
          January: true
          February: true
          April: true
          August: true
          November: true
        DaysOfWeek:
          Monday: true
          Thursday: true
          Friday: true
          Sunday: true
          Wednesday: true
          Tuesday: true
          Saturday: true
        WhichWeekSpecified: true
        WhichWeek: null
      properties:
        WhichWeek:
          $ref: '#/components/schemas/WeekNumberEnum'
        WhichWeekSpecified:
          description: Specifies whether week is specified
          format: true|false
          type: boolean
        DaysOfWeek:
          $ref: '#/components/schemas/DaysOfWeekSelector'
        MonthsOfYear:
          $ref: '#/components/schemas/MonthsOfYearSelector'
      title: MonthlyDOWRecurrence
      type: object
    MonthlyRecurrence:
      description: Represents the days of the month on which a scheduled report runs.
      example:
        MonthsOfYear:
          June: true
          October: true
          December: true
          May: true
          September: true
          March: true
          July: true
          January: true
          February: true
          April: true
          August: true
          November: true
        Days: Days
      properties:
        Days:
          description: Specifies days for recurrence.
          type: string
        MonthsOfYear:
          $ref: '#/components/schemas/MonthsOfYearSelector'
      title: MonthlyRecurrence
      type: object
    MonthsOfYearSelector:
      description: Represents the months of the year in which a scheduled report runs
      example:
        June: true
        October: true
        December: true
        May: true
        September: true
        March: true
        July: true
        January: true
        February: true
        April: true
        August: true
        November: true
      properties:
        January:
          format: true|false
          type: boolean
        February:
          format: true|false
          type: boolean
        March:
          format: true|false
          type: boolean
        April:
          format: true|false
          type: boolean
        May:
          format: true|false
          type: boolean
        June:
          format: true|false
          type: boolean
        July:
          format: true|false
          type: boolean
        August:
          format: true|false
          type: boolean
        September:
          format: true|false
          type: boolean
        October:
          format: true|false
          type: boolean
        November:
          format: true|false
          type: boolean
        December:
          format: true|false
          type: boolean
      title: MonthsOfYearSelector
      type: object
    ParameterValue:
      description: An object that specifies a parameter's value as a name-value pair.
      example:
        IsValueFieldReference: true
        Value: Value
        Name: Name
      properties:
        Name:
          description: A string that contains the name of the parameter.
          format: string
          type: string
        Value:
          description: A string that contains the value for the parameter.
          format: string
          type: string
        IsValueFieldReference:
          description: A boolean value that indicates if the parameter's value references
            a field.
          format: true|false
          type: boolean
      title: ParameterValue
      type: object
    Policy:
      description: An object that specifies a set of roles that are grouped together
        as a policy and can then be assigned as a group of policies to an item using
        the property GroupUserName.
      example:
        GroupUserName: GroupUserName
        Roles:
        - Description: Description
          Name: Name
        - Description: Description
          Name: Name
      properties:
        GroupUserName:
          description: A string value that specifies the name of the user or group
            to which the policy applies.
          format: string
          type: string
        Roles:
          description: An array of objects of type Role that specify the security
            roles that are included in the Policy.
          items:
            $ref: '#/components/schemas/Role'
          type: array
      title: Policy
      type: object
    Property:
      description: An object that defines a property's value as a name-value pair.
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          description: A string value that specifies the name of the property.
          format: string
          type: string
        Value:
          description: A string value that specifies the value for the property.
          format: string
          type: string
      title: Property
      type: object
    Report:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - $ref: '#/components/schemas/Report_1'
    ReportHistorySnapshotsOptions:
      description: An object that specifies options for a Report HistorySnapshot.
      example:
        SystemLimit: 6
        UseDefaultSystemLimit: true
        Schedule: null
        ManualCreationEnabled: true
        KeepExecutionSnapshots: true
        ScopedLimit: 0
      properties:
        ManualCreationEnabled:
          description: A boolean value that specifies whether manual snapshot creation
            is enabled for this HistorySnapshot.
          format: true|false
          type: boolean
        KeepExecutionSnapshots:
          description: A Boolean value that specifies whether execution snapshots
            are kept.
          format: true|false
          type: boolean
        UseDefaultSystemLimit:
          description: A boolean value that specifies whether the default system limit
            is used for this HistorySnapshot.
          format: true|false
          type: boolean
        ScopedLimit:
          description: An Int32 value indicating how many snapshots to keep.
          format: int32
          type: integer
        SystemLimit:
          description: An Int32 value indicating how many snapshots can be kept systemwide.  Default
            (-1) is unlimited.
          format: int32
          type: integer
        Schedule:
          $ref: '#/components/schemas/ReportHistorySnapshotsOptions_Schedule'
      title: ReportHistorySnapshotsOptions
      type: object
    ReportParameterDefinition:
      description: An object that specifies the metadata definition of a parameter
        for a report.
      example:
        ParameterState: null
        ParameterType: null
        QueryParameter: true
        DefaultValuesQueryBased: true
        ValidValues:
        - Label: Label
          Value: Value
        - Label: Label
          Value: Value
        ParameterVisibility: null
        Name: Name
        PromptUser: true
        ValidValuesQueryBased: true
        DefaultValuesIsNull: true
        AllowBlank: true
        DefaultValues:
        - DefaultValues
        - DefaultValues
        Prompt: Prompt
        Dependencies:
        - Dependencies
        - Dependencies
        ErrorMessage: ErrorMessage
        ValidValuesIsNull: true
        MultiValue: true
        Nullable: true
      properties:
        AllowBlank:
          description: A boolean value that indicates whether the ReportParamter is
            allowed to be blank.
          format: true|false
          type: boolean
        DefaultValues:
          description: An array of string values that specify the ReportParameter's
            default values. If the parameter is multi-valued then the array can have
            more than one entry.
          items:
            type: string
          type: array
        DefaultValuesIsNull:
          description: ' A boolean value that indicates whether the DefaultValues
            property is NULL.'
          format: true|false
          type: boolean
        DefaultValuesQueryBased:
          description: A boolean value that indicates whether the ReportParamter's
            default values are obtained from a query (instead of being static specified
            values).
          format: true|false
          type: boolean
        Dependencies:
          description: An array of string values that specify the dependencies for
            the ReportParameter.
          items:
            type: string
          type: array
        ErrorMessage:
          description: Error returned when validating parameters.
          format: string
          type: string
        MultiValue:
          description: A boolean value that indicates whether the ReportParameter
            is multivalued.
          format: true|false
          type: boolean
        Name:
          description: A string value that specifies the name for the ReportParameter.
            This name will typically be displayed in the user interface.
          format: string
          type: string
        Nullable:
          description: A boolean value that indicates whether the ReportParameter
            is allowed to be null.
          format: true|false
          type: boolean
        ParameterState:
          $ref: '#/components/schemas/ReportParameterState'
        ParameterType:
          $ref: '#/components/schemas/ReportParameterType'
        ParameterVisibility:
          $ref: '#/components/schemas/ReportParameterVisibility'
        Prompt:
          description: A string value that specifies text used to prompt a user for
            the value of the ReportParameter.
          format: string
          type: string
        PromptUser:
          description: A boolean value that indicates whether the user should be prompted
            for the value for the ReportParameter.
          format: true|false
          type: boolean
        QueryParameter:
          description: A boolean value that indicates whether the ReportParamter is
            query based.
          format: true|false
          type: boolean
        ValidValues:
          items:
            $ref: '#/components/schemas/ValidValue'
          type: array
        ValidValuesIsNull:
          description: A boolean value that indicates whether the ValidValues property
            is NULL.
          format: true|false
          type: boolean
        ValidValuesQueryBased:
          description: A boolean value that indicates whether the ReportParameter's
            valid values are obtained from a query (instead of being static specified
            values).
          format: true|false
          type: boolean
      title: ReportParameterDefinition
      type: object
    ReportParameterDefinitionPatch:
      description: An object that specifies the parts of a report parameter that can
        be modified outside of the RDL definition.
      example:
        DefaultValues:
        - DefaultValues
        - DefaultValues
        Prompt: Prompt
        ParameterVisibility: null
        Name: Name
      properties:
        Name:
          description: A string value that specifies the name of the ReportParameter.
          format: string
          type: string
        DefaultValues:
          description: Array of default values
          items:
            type: string
          type: array
        Prompt:
          description: A string value that specifies text used to prompt a user for
            the value of the ReportParameter.
          format: string
          type: string
        ParameterVisibility:
          $ref: '#/components/schemas/ReportParameterVisibility'
      title: ReportParameterDefinitionPatch
      type: object
    ReportParameterState:
      description: An enumeration of values that specify the valid states for a ReportParameter.
      enum:
      - HasValidValue
      - MissingValidValue
      - HasOutstandingDependencies
      - DynamicValuesUnavailable
      title: ReportParameterState
      type: string
    ReportParameterType:
      description: An enumeration of values that specify the data types for a report
        parameter.
      enum:
      - Boolean
      - DateTime
      - Integer
      - Float
      - String
      title: ReportParameterType
      type: string
    ReportParameterVisibility:
      description: "An enumeration of values that specify the visibility of a report\
        \ parameter, as to whether it is visible at runtime, hidden at runtime, or\
        \ internal, meaning only visible in the definition."
      enum:
      - Visible
      - Hidden
      - Internal
      title: ReportParameterVisibility
      type: string
    Query:
      description: Represents a SQL query to be executed. The query cannot contain
        parameters.
      example:
        Timeout: 0
        CommandText: CommandText
      properties:
        CommandText:
          description: Command to be executed against given data source
          format: string
          type: string
        Timeout:
          description: "Query Timeout, default is 30 seconds."
          format: int32
          type: integer
      title: Query string
      type: object
    Resource:
      allOf:
      - $ref: '#/components/schemas/CatalogItem'
      - description: The resource object serves as a generalized container for a CatalogItem
          and can be retrieved in a HTTP request. Resource is derived from CatalogItem
          and contains all of its properties.
        title: Resource
        type: object
    ResourceGroup:
      description: An object that contains metadata and contents for a ResourceItem.
      properties:
        Type:
          $ref: '#/components/schemas/MobileReportResourceGroupType'
        Items:
          description: An array of objects of type ResourceItem that contain the contents
            of the ResourceGroup.
          items:
            $ref: '#/components/schemas/ResourceItem'
          type: array
      title: ResourceGroup
      type: object
    ResourceItem:
      allOf:
      - $ref: '#/components/schemas/ManifestItem'
      - $ref: '#/components/schemas/ResourceItem_allOf'
      description: An object that specifies the metadata for a Resource.
      title: ResourceItem
    Role:
      description: An object that specifies security roles that are supported on the
        Report Server instance.
      example:
        Description: Description
        Name: Name
      properties:
        Name:
          description: A string value that specifies the name of the Role.
          format: string
          type: string
        Description:
          description: A string value that constains descriptive text for the Role.
          format: string
          type: string
      title: Role
      type: object
    ScheduleDefinition:
      description: An object that defines a schedule including a start date-time and
        an optional end date-time.
      example:
        Recurrence:
          DailyRecurrence:
            DaysInterval: 6
          WeeklyRecurrence:
            WeeksIntervalSpecified: true
            DaysOfWeek:
              Monday: true
              Thursday: true
              Friday: true
              Sunday: true
              Wednesday: true
              Tuesday: true
              Saturday: true
            WeeksInterval: 1
          MonthlyDOWRecurrence:
            MonthsOfYear:
              June: true
              October: true
              December: true
              May: true
              September: true
              March: true
              July: true
              January: true
              February: true
              April: true
              August: true
              November: true
            DaysOfWeek:
              Monday: true
              Thursday: true
              Friday: true
              Sunday: true
              Wednesday: true
              Tuesday: true
              Saturday: true
            WhichWeekSpecified: true
            WhichWeek: null
          MonthlyRecurrence:
            MonthsOfYear:
              June: true
              October: true
              December: true
              May: true
              September: true
              March: true
              July: true
              January: true
              February: true
              April: true
              August: true
              November: true
            Days: Days
          MinuteRecurrence:
            MinutesInterval: 0
        StartDateTime: 2017-04-13T15:51:04Z
        EndDateSpecified: true
        EndDate: 2017-04-13T15:51:04Z
      properties:
        StartDateTime:
          description: A string that specifies the date-time of the start of the schedule.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        EndDate:
          description: A string that specifies the date-time of the end of the schedule.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        EndDateSpecified:
          description: A boolean value that indicates whether the schedule end is
            specified.
          format: true|false
          type: boolean
        Recurrence:
          $ref: '#/components/schemas/ScheduleRecurrence'
      title: ScheduleDefinition
      type: object
    ScheduleRecurrence:
      description: "An object that defines the recurrence of a schedule. When defining\
        \ the recurrence, only one of the recurrence types can be set."
      example:
        DailyRecurrence:
          DaysInterval: 6
        WeeklyRecurrence:
          WeeksIntervalSpecified: true
          DaysOfWeek:
            Monday: true
            Thursday: true
            Friday: true
            Sunday: true
            Wednesday: true
            Tuesday: true
            Saturday: true
          WeeksInterval: 1
        MonthlyDOWRecurrence:
          MonthsOfYear:
            June: true
            October: true
            December: true
            May: true
            September: true
            March: true
            July: true
            January: true
            February: true
            April: true
            August: true
            November: true
          DaysOfWeek:
            Monday: true
            Thursday: true
            Friday: true
            Sunday: true
            Wednesday: true
            Tuesday: true
            Saturday: true
          WhichWeekSpecified: true
          WhichWeek: null
        MonthlyRecurrence:
          MonthsOfYear:
            June: true
            October: true
            December: true
            May: true
            September: true
            March: true
            July: true
            January: true
            February: true
            April: true
            August: true
            November: true
          Days: Days
        MinuteRecurrence:
          MinutesInterval: 0
      properties:
        MinuteRecurrence:
          $ref: '#/components/schemas/MinuteRecurrence'
        DailyRecurrence:
          $ref: '#/components/schemas/DailyRecurrence'
        WeeklyRecurrence:
          $ref: '#/components/schemas/WeeklyRecurrence'
        MonthlyRecurrence:
          $ref: '#/components/schemas/MonthlyRecurrence'
        MonthlyDOWRecurrence:
          $ref: '#/components/schemas/MonthlyDOWRecurrence'
      title: ScheduleRecurrence
      type: object
    ScheduleReference:
      description: An object that contains either a reference to a defined schedule
        or the schedule details for the current context.
      example:
        Definition:
          Recurrence:
            DailyRecurrence:
              DaysInterval: 6
            WeeklyRecurrence:
              WeeksIntervalSpecified: true
              DaysOfWeek:
                Monday: true
                Thursday: true
                Friday: true
                Sunday: true
                Wednesday: true
                Tuesday: true
                Saturday: true
              WeeksInterval: 1
            MonthlyDOWRecurrence:
              MonthsOfYear:
                June: true
                October: true
                December: true
                May: true
                September: true
                March: true
                July: true
                January: true
                February: true
                April: true
                August: true
                November: true
              DaysOfWeek:
                Monday: true
                Thursday: true
                Friday: true
                Sunday: true
                Wednesday: true
                Tuesday: true
                Saturday: true
              WhichWeekSpecified: true
              WhichWeek: null
            MonthlyRecurrence:
              MonthsOfYear:
                June: true
                October: true
                December: true
                May: true
                September: true
                March: true
                July: true
                January: true
                February: true
                April: true
                August: true
                November: true
              Days: Days
            MinuteRecurrence:
              MinutesInterval: 0
          StartDateTime: 2017-04-13T15:51:04Z
          EndDateSpecified: true
          EndDate: 2017-04-13T15:51:04Z
        ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ScheduleId:
          description: The Id property of an existing schedule that will be used in
            the current context.
          format: uuid
          type: string
        Definition:
          $ref: '#/components/schemas/ScheduleDefinition'
      title: ScheduleReference
      type: object
    Subscription:
      description: An object that defines a subscription. A Reporting Services subscription
        allows a user to subscribe to a Report or Data Source and then to automatically
        receive an update whenever the item is updated.
      example:
        ScheduleDescription: ScheduleDescription
        LastStatus: LastStatus
        Owner: Owner
        IsDataDriven: true
        Description: Description
        Report: Report
        EventType: EventType
        LocalizedDeliveryExtensionName: LocalizedDeliveryExtensionName
        IsActive: true
        DeliveryExtension: DeliveryExtension
        ModifiedBy: ModifiedBy
        ModifiedDate: 2017-04-13T15:51:04Z
        ParameterValues:
        - IsValueFieldReference: true
          Value: Value
          Name: Name
        - IsValueFieldReference: true
          Value: Value
          Name: Name
        LastRunTime: 2017-04-13T15:51:04Z
        Id: 01234567-89ab-cdef-0123-456789abcdef
        ExtensionSettings:
          Extension: Extension
          ParameterValues:
            IsValueFieldReference: true
            Value: Value
            Name: Name
      properties:
        Id:
          description: A unique UUID value that specifies the identifier by which
            this Subscription can be referenced in requests or in other defined objects.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        Owner:
          description: A string value that specifies the owner of the Subscription.
          format: string
          type: string
        IsDataDriven:
          description: A boolean value that specifies whether the members of the distribution
            list for the subscription are computed based on data.
          format: true|false
          type: boolean
        Description:
          description: A string value that contains descriptive text about the Subscription.
          format: string
          type: string
        Report:
          description: A string value that specifies the path of the report for this
            Subscription.
          format: string
          type: string
        IsActive:
          description: A boolean value that specifies whether the Subscription is
            currently active.
          format: true|false
          type: boolean
        EventType:
          description: A string specifying the type of event that triggers the Subscription.
          format: string
          type: string
        ScheduleDescription:
          description: A string value that contains descriptive text about the schedule
            referenced in the Schedule property.
          format: string
          type: string
        LastRunTime:
          description: A string value that contains the date-time that the schedule
            was last run.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        LastStatus:
          description: A string specifying the Status of the last run.
          format: string
          type: string
        ExtensionSettings:
          $ref: '#/components/schemas/ExtensionSettings'
        DeliveryExtension:
          description: An object that specifies the DeliveryExtension that will be
            used with this Schedule's report delivery.
          format: string
          type: string
        LocalizedDeliveryExtensionName:
          description: Localized version of extension name when available.
          format: string
          type: string
        ModifiedBy:
          description: A string value that contains the network user name of the last
            user to modify the subscription.
          format: string
          type: string
        ModifiedDate:
          description: A string value that contains the date-time of the last modification
            to the subscription.
          example: 2017-04-13T15:51:04Z
          format: date-time
          type: string
        ParameterValues:
          description: An array of items of type ParameterValue that specify the parameter
            values for the subscription.
          items:
            $ref: '#/components/schemas/ParameterValue'
          type: array
      title: Subscription
      type: object
    SystemInfo:
      description: An object that specifies information about the Report Server.
      example:
        ReportServerRelativeUrl: ReportServerRelativeUrl
        TimeZone: TimeZone
        ProductName: ProductName
        ProductType: PowerBiReportServer
        WebPortalRelativeUrl: WebPortalRelativeUrl
        ProductVersion: ProductVersion
        ReportServerAbsoluteUrl: ReportServerAbsoluteUrl
      properties:
        ReportServerAbsoluteUrl:
          description: A string value that specifies the URL for the Report Server.
          format: string
          type: string
        ReportServerRelativeUrl:
          description: A string value that specifies the Report Server Virtual Directory.
          format: string
          type: string
        WebPortalRelativeUrl:
          description: A string value that specifies the URL for the Report Server
            web portal.
          format: string
          type: string
        ProductName:
          description: A string value that specifies the name of the product being
            used.
          format: string
          type: string
        ProductVersion:
          description: A string value that specifies the version of the product being
            used.
          format: string
          type: string
        ProductType:
          description: A string value that specifies the type of the product being
            used.
          enum:
          - PowerBiReportServer
          - SqlServerReportingServices
          type: string
        TimeZone:
          description: A string value that specifies the timezone being used by the
            server.
          format: string
          type: string
      title: System
      type: object
    SystemPolicy:
      example:
        Policies:
        - GroupUserName: GroupUserName
          Roles:
          - Description: Description
            Name: Name
          - Description: Description
            Name: Name
        - GroupUserName: GroupUserName
          Roles:
          - Description: Description
            Name: Name
          - Description: Description
            Name: Name
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          description: A unique UUID value that specifies the identifier of the SystemPolicy.
          format: uuid
          type: string
        Policies:
          description: An array of objects of type Policy that specify the access
            policies to be applied to the System.
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      type: object
    ThumbnailItem:
      allOf:
      - $ref: '#/components/schemas/ManifestItem'
      - $ref: '#/components/schemas/ThumbnailItem_allOf'
      description: An object that contains the contents of a thumbnail.
      title: ThumbnailItem
    User:
      description: An object that contains information about the Report Server user.
      example:
        Username: Username
        HasFavoriteItems: true
        DisplayName: DisplayName
        MyReportsPath: MyReportsPath
        Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        Id:
          description: A unique UUID value that specifies the identifier by which
            this User object can be referenced in requests or in other defined objects.
          example: 01234567-89ab-cdef-0123-456789abcdef
          format: uuid
          type: string
        Username:
          description: A string value that specifies the network user name for the
            user.
          format: string
          type: string
        DisplayName:
          description: A string value that specifies the name to display for the network
            user.
          format: string
          type: string
        HasFavoriteItems:
          description: A boolean value that indicates whether the user has items that
            are designated as favorite items.
          format: true|false
          type: boolean
        MyReportsPath:
          description: A string value that specifies a path to a folder where a user's
            reports are stored by default. (This feature must be enabled by the server
            administrator).
          format: string
          type: string
      title: User
      type: object
    UserCredentials:
      example:
        UserName: UserName
        Domain: Domain
        Password: Password
      properties:
        UserName:
          description: A string value that specifies the user name for the user.
          format: string
          type: string
        Password:
          description: A string value that specifies the password for the user.
          format: string
          type: string
        Domain:
          description: A string value that specifies the domain for the user.
          format: string
          type: string
      type: object
    ValidValue:
      description: "An object that contains a value that is valid for use in its context,\
        \ in the form of a label-value pair."
      example:
        Label: Label
        Value: Value
      properties:
        Label:
          description: A string value that specifies the label for the ValidValue.
          type: string
        Value:
          description: A string value that specifies the value of the ValidValue.
          type: string
      title: ValidValue
      type: object
    WeeklyRecurrence:
      description: Represents the intervals at which a scheduled report runs. Intervals
        are specified in weeks and on which days of the week.
      example:
        WeeksIntervalSpecified: true
        DaysOfWeek:
          Monday: true
          Thursday: true
          Friday: true
          Sunday: true
          Wednesday: true
          Tuesday: true
          Saturday: true
        WeeksInterval: 1
      properties:
        WeeksInterval:
          description: An Int32 value representing interval in weeks.
          format: int32
          type: integer
        WeeksIntervalSpecified:
          description: True if using WeeksInterval.
          format: true|false
          type: boolean
        DaysOfWeek:
          $ref: '#/components/schemas/DaysOfWeekSelector'
      title: WeeklyRecurrence
      type: object
    WeekNumberEnum:
      description: Describes the week of the month on which a scheduled report runs.
      enum:
      - FirstWeek
      - SecondWeek
      - ThirdWeek
      - FourthWeek
      - LastWeek
      title: WeekNumberEnum
      type: string
    odata.error:
      properties:
        error:
          $ref: '#/components/schemas/odata.error.main'
      required:
      - error
      type: object
    odata.error.detail:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
      required:
      - code
      - message
      type: object
    odata.error.main:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
        details:
          items:
            $ref: '#/components/schemas/odata.error.detail'
          type: array
        innererror:
          description: The structure of this object is service-specific.
          properties: {}
          type: object
      required:
      - code
      - message
      type: object
    ODataCatalogItems:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/CatalogItem'
          type: array
      title: ODataCatalogItems
      type: object
    DeleteItemsRequest:
      example:
        CatalogItemPaths:
        - CatalogItemPaths
        - CatalogItemPaths
      properties:
        CatalogItemPaths:
          items:
            type: string
          type: array
      title: DeleteItemsRequest
      type: object
    MoveItemsRequest:
      example:
        CatalogItemPaths:
        - CatalogItemPaths
        - CatalogItemPaths
        TargetPath: TargetPath
      properties:
        CatalogItemPaths:
          items:
            type: string
          type: array
        TargetPath:
          type: string
      title: MoveItemsRequest
      type: object
    ODataProperties:
      example:
        '@odata.context': '@odata.context'
        value:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/Property'
          type: array
      title: ODataProperties
      type: object
    ODataProperties_1:
      example:
        '@odata.context': '@odata.context'
        value:
        - Description: Description
          Name: Name
        - Description: Description
          Name: Name
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/Role'
          type: array
      title: ODataProperties
      type: object
    ODataDataSets:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/DataSet'
          type: array
      title: ODataDataSets
      type: object
    ODataAllowedActions:
      example:
        '@odata.context': '@odata.context'
        value:
        - Action: Action
        - Action: Action
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/AllowedAction'
          type: array
      title: ODataAllowedActions
      type: object
    ODataCacheRefreshPlans:
      example:
        '@odata.context': '@odata.context'
        value:
        - LastStatus: LastStatus
          Owner: Owner
          Description: Description
          EventType: EventType
          Schedule:
            Definition:
              Recurrence:
                DailyRecurrence:
                  DaysInterval: 6
                WeeklyRecurrence:
                  WeeksIntervalSpecified: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WeeksInterval: 1
                MonthlyDOWRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WhichWeekSpecified: true
                  WhichWeek: null
                MonthlyRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  Days: Days
                MinuteRecurrence:
                  MinutesInterval: 0
              StartDateTime: 2017-04-13T15:51:04Z
              EndDateSpecified: true
              EndDate: 2017-04-13T15:51:04Z
            ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LastRunTime: 2017-04-13T15:51:04Z
          CatalogItemPath: CatalogItemPath
          Id: 01234567-89ab-cdef-0123-456789abcdef
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          ParameterValues:
          - IsValueFieldReference: true
            Value: Value
            Name: Name
          - IsValueFieldReference: true
            Value: Value
            Name: Name
        - LastStatus: LastStatus
          Owner: Owner
          Description: Description
          EventType: EventType
          Schedule:
            Definition:
              Recurrence:
                DailyRecurrence:
                  DaysInterval: 6
                WeeklyRecurrence:
                  WeeksIntervalSpecified: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WeeksInterval: 1
                MonthlyDOWRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  DaysOfWeek:
                    Monday: true
                    Thursday: true
                    Friday: true
                    Sunday: true
                    Wednesday: true
                    Tuesday: true
                    Saturday: true
                  WhichWeekSpecified: true
                  WhichWeek: null
                MonthlyRecurrence:
                  MonthsOfYear:
                    June: true
                    October: true
                    December: true
                    May: true
                    September: true
                    March: true
                    July: true
                    January: true
                    February: true
                    April: true
                    August: true
                    November: true
                  Days: Days
                MinuteRecurrence:
                  MinutesInterval: 0
              StartDateTime: 2017-04-13T15:51:04Z
              EndDateSpecified: true
              EndDate: 2017-04-13T15:51:04Z
            ScheduleId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LastRunTime: 2017-04-13T15:51:04Z
          CatalogItemPath: CatalogItemPath
          Id: 01234567-89ab-cdef-0123-456789abcdef
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          ParameterValues:
          - IsValueFieldReference: true
            Value: Value
            Name: Name
          - IsValueFieldReference: true
            Value: Value
            Name: Name
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/CacheRefreshPlan'
          type: array
      title: ODataCacheRefreshPlans
      type: object
    ODataDependentItems:
      example:
        '@odata.context': '@odata.context'
        value:
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/CatalogItem'
          type: array
      title: ODataDependentItems
      type: object
    DataSetAggregateValueParameters:
      example:
        Parameters:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        Parameters:
          items:
            $ref: '#/components/schemas/DataSetParameter'
          type: array
      title: DataSetAggregateValueParameters
      type: object
    DataSetDataParameters:
      example:
        Parameters:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        Parameters:
          items:
            $ref: '#/components/schemas/DataSetParameter'
          type: array
      title: DataSetDataParameters
      type: object
    DataSetColumns:
      example:
        Type: Type
        Name: Name
      properties:
        Name:
          type: string
        Type:
          type: string
      title: DataSetColumns
      type: object
    DataSetData:
      example:
        Columns:
        - Type: Type
          Name: Name
        - Type: Type
          Name: Name
        Name: Name
        Rows:
        - - Rows
          - Rows
        - - Rows
          - Rows
      properties:
        Name:
          type: string
        Rows:
          items:
            items:
              type: string
            type: array
          type: array
        Columns:
          items:
            $ref: '#/components/schemas/DataSetColumns'
          type: array
      title: DataSetData
      type: object
    ODataReportParameterDefinitions:
      example:
        '@odata.context': '@odata.context'
        value:
        - ParameterState: null
          ParameterType: null
          QueryParameter: true
          DefaultValuesQueryBased: true
          ValidValues:
          - Label: Label
            Value: Value
          - Label: Label
            Value: Value
          ParameterVisibility: null
          Name: Name
          PromptUser: true
          ValidValuesQueryBased: true
          DefaultValuesIsNull: true
          AllowBlank: true
          DefaultValues:
          - DefaultValues
          - DefaultValues
          Prompt: Prompt
          Dependencies:
          - Dependencies
          - Dependencies
          ErrorMessage: ErrorMessage
          ValidValuesIsNull: true
          MultiValue: true
          Nullable: true
        - ParameterState: null
          ParameterType: null
          QueryParameter: true
          DefaultValuesQueryBased: true
          ValidValues:
          - Label: Label
            Value: Value
          - Label: Label
            Value: Value
          ParameterVisibility: null
          Name: Name
          PromptUser: true
          ValidValuesQueryBased: true
          DefaultValuesIsNull: true
          AllowBlank: true
          DefaultValues:
          - DefaultValues
          - DefaultValues
          Prompt: Prompt
          Dependencies:
          - Dependencies
          - Dependencies
          ErrorMessage: ErrorMessage
          ValidValuesIsNull: true
          MultiValue: true
          Nullable: true
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/ReportParameterDefinition'
          type: array
      title: ODataReportParameterDefinitions
      type: object
    ODataDataSources:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/DataSource'
          type: array
      title: ODataDataSources
      type: object
    QueryFieldsRequest:
      example:
        query:
          Timeout: 0
          CommandText: CommandText
        dataSource: null
      properties:
        dataSource:
          $ref: '#/components/schemas/DataSource'
        query:
          $ref: '#/components/schemas/Query'
      title: QueryFieldsRequest
      type: object
    ODataQueryFields:
      example:
        '@odata.context': '@odata.context'
        value:
        - value
        - value
      properties:
        '@odata.context':
          type: string
        value:
          items:
            type: string
          type: array
      title: ODataQueryFields
      type: object
    ODataFolders:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      title: ODataFolders
      type: object
    ODataCatalogItems_1:
      example:
        '@odata.context': '@odata.context'
        value:
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
        - Path: Path
          Description: Description
          CreatedBy: CreatedBy
          ContentType: ContentType
          Size: 6
          ModifiedBy: ModifiedBy
          ModifiedDate: 2017-04-13T15:51:04Z
          IsFavorite: true
          ParentFolderId: 01234567-89ab-cdef-0123-456789abcdef
          Name: Name
          Type: null
          Content: Content
          CreatedDate: 2017-04-13T15:51:04Z
          Hidden: true
          Id: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/CatalogItem'
          type: array
      title: ODataCatalogItems
      type: object
    ODataKpis:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/Kpi'
          type: array
      title: ODataKpis
      type: object
    ODataLinkedReports:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/LinkedReport'
          type: array
      title: ODataLinkedReports
      type: object
    ODataComments:
      example:
        '@odata.context': '@odata.context'
        value:
        - UserName: UserName
          AttachmentPath: AttachmentPath
          ThreadId: 01234567-89ab-cdef-0123-456789abcdef
          CreatedDate: 2017-04-13T15:51:04Z
          Text: Text
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ModifiedDate: 2017-04-13T15:51:04Z
          ItemId: 01234567-89ab-cdef-0123-456789abcdef
        - UserName: UserName
          AttachmentPath: AttachmentPath
          ThreadId: 01234567-89ab-cdef-0123-456789abcdef
          CreatedDate: 2017-04-13T15:51:04Z
          Text: Text
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ModifiedDate: 2017-04-13T15:51:04Z
          ItemId: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/Comment'
          type: array
      title: ODataComments
      type: object
    ODataMobileReport:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/MobileReport'
          type: array
      title: ODataMobileReport
      type: object
    ODataReports:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/Report'
          type: array
      title: ODataReports
      type: object
    UpdateCacheSnapshotResult:
      example:
        value: true
      properties:
        value:
          type: boolean
      title: UpdateCacheSnapshotResult
      type: object
    ODataProperties_2:
      example:
        '@odata.context': '@odata.context'
        value:
        - ParameterState: null
          ParameterType: null
          QueryParameter: true
          DefaultValuesQueryBased: true
          ValidValues:
          - Label: Label
            Value: Value
          - Label: Label
            Value: Value
          ParameterVisibility: null
          Name: Name
          PromptUser: true
          ValidValuesQueryBased: true
          DefaultValuesIsNull: true
          AllowBlank: true
          DefaultValues:
          - DefaultValues
          - DefaultValues
          Prompt: Prompt
          Dependencies:
          - Dependencies
          - Dependencies
          ErrorMessage: ErrorMessage
          ValidValuesIsNull: true
          MultiValue: true
          Nullable: true
        - ParameterState: null
          ParameterType: null
          QueryParameter: true
          DefaultValuesQueryBased: true
          ValidValues:
          - Label: Label
            Value: Value
          - Label: Label
            Value: Value
          ParameterVisibility: null
          Name: Name
          PromptUser: true
          ValidValuesQueryBased: true
          DefaultValuesIsNull: true
          AllowBlank: true
          DefaultValues:
          - DefaultValues
          - DefaultValues
          Prompt: Prompt
          Dependencies:
          - Dependencies
          - Dependencies
          ErrorMessage: ErrorMessage
          ValidValuesIsNull: true
          MultiValue: true
          Nullable: true
      properties:
        '@odata.context':
          type: string
        value:
          items:
            $ref: '#/components/schemas/ReportParameterDefinition'
          type: array
      title: ODataProperties
      type: object
    ODataResources:
      example:
        '@odata.count': 0
        '@odata.context': '@odata.context'
        value:
        - null
        - null
      properties:
        '@odata.context':
          type: string
        '@odata.count':
          type: integer
        value:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      title: ODataResources
      type: object
    DataSet_1:
      description: "The DataSet object is derived from the abstract type CatalogItem\
        \ and therefore contains all of its properties. This object specifies the\
        \ information needed to supply a set of data to a report. It is analogous\
        \ to a view in a database and can include a data source pointer, a query definition,\
        \ and optional parameter values, calculated fields, and filtering and collation\
        \ information."
      properties:
        HasParameters:
          description: A boolean value that indicates whether the dataset definition
            contains parameters.
          format: true|false
          type: boolean
        QueryExecutionTimeOut:
          description: An Int32 value that indicates the query execution timeout in
            seconds.
          format: int32
          type: integer
      title: DataSet
      type: object
      example: null
    DataSource_1:
      description: An object that defines information about an external source of
        data that can be connected to as a source of data for Reporting Services.
        DataSource is derived from CatalogItem and therefore includes all properties
        defined by CatalogItem.
      properties:
        IsEnabled:
          description: A Boolean value that specifies whether the DataSource is enabled
            for use.
          format: true|false
          type: boolean
        ConnectionString:
          description: A string value that can be passed to a data source in order
            to begin the process of establishing connection.
          format: string
          type: string
        DataSourceType:
          description: DataSource extension such as 'SQL'.
          format: string
          type: string
        IsOriginalConnectionStringExpressionBased:
          description: Indicates whether the original connection string for the data
            source was expression-based.
          format: true|false
          type: boolean
        IsConnectionStringOverridden:
          description: Specifies whether the original connection string is overridden.
          format: true|false
          type: boolean
        CredentialsByUser:
          $ref: '#/components/schemas/CredentialsSuppliedByUser'
        CredentialsInServer:
          $ref: '#/components/schemas/CredentialsStoredInServer'
        IsReference:
          description: Indicates whether this is a reference to a shared data source
            or an embedded data source.
          format: true|false
          type: boolean
        Subscriptions:
          $ref: '#/components/schemas/Subscription'
      title: DataSource
      type: object
      example: null
    Kpi_1:
      description: An object that specifies a Key Process Indicator (KPI). KPI is
        derived from the abstract type CatalogItem and therefore includes all of its
        properties.
      properties:
        ValueFormat:
          $ref: '#/components/schemas/KpiValueFormat'
        Visualization:
          $ref: '#/components/schemas/KpiVisualization'
        DrillthroughTarget:
          $ref: '#/components/schemas/DrillthroughTarget'
        Currency:
          description: A string value that specifies the currency. Must follow the
            ISO 4217 Currency codes standard.
          format: string
          type: string
        Values:
          $ref: '#/components/schemas/KpiValues'
        Data:
          $ref: '#/components/schemas/KpiData'
      title: Kpi
      type: object
      example: null
    LinkedReport_1:
      description: An object that specifies a linked report. A linked report is a
        CatalogItem that contains a reference to the report definition but has its
        own set of report properties and settings.
      properties:
        HasParameters:
          description: A boolean value that indicates whether the LinkedReport has
            parameters.
          format: true|false
          type: boolean
        Link:
          description: ' A string value that specifies the path to the report item
            that this linked report is linked to.'
          format: string
          type: string
      title: LinkedReport
      type: object
      example: null
    MobileReport_1:
      description: An object that specifies the content of a MobileReport.
      properties:
        AllowCaching:
          description: A boolean value that indicates whether the MobileReport allows
            caching.
          format: true|false
          type: boolean
        Manifest:
          $ref: '#/components/schemas/MobileReportManifest'
        HasSharedDataSets:
          description: A boolean value that indicates whether the MobileReport has
            shared DataSets associated with it.
          format: true|false
          type: boolean
      title: MobileReport
      type: object
      example: null
    Report_1:
      description: "An object that is the CatalogItem for a Report. This object is\
        \ derived from CatalogItem and therefore contains all of its properties, plus\
        \ additional properties for the Report item."
      properties:
        HasDataSources:
          description: A boolean value that indicates whether the Report has DataSources
            associated with it.
          format: true|false
          type: boolean
        HasSharedDataSets:
          description: A boolean value that indicates whether the Report has shared
            DataSets associated with it.
          format: true|false
          type: boolean
        HasParameters:
          description: A boolean value that indicates whether the Report has parameters.
          format: true|false
          type: boolean
      title: Report
      type: object
      example: null
    ReportHistorySnapshotsOptions_Schedule:
      allOf:
      - $ref: '#/components/schemas/ScheduleReference'
      - description: An object that specifies the schedule for making snapshots for
          this item.
        type: object
      type: object
    ResourceItem_allOf:
      properties:
        Key:
          type: string
      type: object
      example: null
    ThumbnailItem_allOf:
      properties:
        Type:
          $ref: '#/components/schemas/MobileReportThumbnailType'
      type: object
      example: null
x-original-swagger-version: "2.0"

